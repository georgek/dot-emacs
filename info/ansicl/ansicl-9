This is ansicl, produced by makeinfo version 4.13 from temp.texi.

INFO-DIR-SECTION Programming
START-INFO-DIR-ENTRY
* ANSI Common Lisp: (ansicl).    Draft ANSI Common Lisp standard (dpANS3R).
END-INFO-DIR-ENTRY


File: ansicl,  Node: T,  Next: U,  Prev: S,  Up: Glossary

T
=

t
     n.  1. a. the boolean representing true.  b. the canonical
     generalized boolean representing true.  (Although any object other
     than ‘nil’ is considered true as a generalized boolean, ‘t’ is
     generally used when there is no special reason to prefer one such
     object over another.)  2. the name of the type to which all
     objects belong--the supertype of all types (including itself).  3.
     the name of the superclass of all classes except itself.

tag  n. 
     1. a catch tag.  2. a go tag.

tail  n. (of a list)
     an object that is the same as either some cons which makes up that
     list or the atom (if any) which terminates the list.  "The empty
     list is a tail of every proper list."

target  n. 
     1. (of a constructed stream) a constituent of the constructed
     stream.  "The target of a synonym stream is the value of its
     synonym stream symbol."  2. (of a displaced array) the array to
     which the displaced array is displaced.  (In the case of a chain
     of constructed streams or displaced arrays, the unqualified term
     "target" always refers to the immediate target of the first item
     in the chain, not the immediate target of the last item.)

terminal I/O  n. 
     the bidirectional stream that is the value of the variable
     ‘*terminal-io*’.

terminating  n. (of a macro character)
     being such that, if it appears while parsing a token, it
     terminates that token.  See *note Section 2.2 (Reader Algorithm):
     Reader Algorithm.

tertiary value  n. (of values resulting from the
     evaluation of a form) the third value, if any, or else ‘nil’ if
     there are fewer than three values.

throw  v. 
     to transfer control and values to a catch.  See the special
     operator *note throw::.

tilde  n.
     the standard character that is called "tilde" (‘~’).  See *note
     Figure 2.5: StdCharsThree.

time
     a representation of a point (absolute time) or an interval
     (relative time) on a time line.  See *note decoded time:
     glos-decoded time, internal time, and universal time.

time zone  n.
     a rational multiple of ‘1/3600’ between ‘-24’ (inclusive) and ‘24’
     (inclusive) that represents a time zone as a number of hours
     offset from Greenwich Mean Time.  Time zone values increase with
     motion to the west, so   Massachusetts, U.S.A. is in time zone ‘5’,
     California, U.S.A. is time zone ‘8’, and Moscow, Russia is time
     zone -3.  (When "daylight savings time" is separately represented
     as an argument or return value, the time zone that accompanies it
     does not depend on whether daylight savings time is in effect.)

token  n.
     a textual representation for a number or a symbol.  See *note
     Section 2.3 (Interpretation of Tokens): Interpretation of Tokens.

top level form  n. 
     a form which is processed specially by ‘compile-file’ for the
     purposes of enabling compile time evaluation of that form.  Top
     level forms include those forms which are not subforms of any
     other form, and certain other cases.  See *note Section 3.2.3.1
     (Processing of Top Level Forms): TopLevelForms.

trace output  n. 
     the output stream which is the value of the dynamic variable
     ‘*trace-output*’.

tree  n. 
     1. a binary recursive data structure made up of conses and atoms:
     the conses are themselves also trees (sometimes called "subtrees"
     or "branches"), and the atoms are terminal nodes (sometimes called
     leaves). Typically, the leaves represent data while the branches
     establish some relationship among that data.  2. in general, any
     recursive data structure that has some notion of "branches" and
     leaves.

tree structure  n. (of a tree₁)
     the set of conses that make up the tree.  Note that while the
     car[1b] component of each such cons is part of the tree structure,
     the objects that are the cars₂ of each cons in the tree are not
     themselves part of its tree structure unless they are also conses.

true  n. 
     any object that is not false and that is used to represent the
     success of a predicate test.  See *note t: glos-t.₁.

truename  n. 
     1. the canonical filename of a file in the file system.  See *note
     Section 20.1.3 (Truenames): Truenames.  2. a pathname representing
     a truename₁.

two-way stream  n. 
     a stream of type ‘two-way-stream’, which is a bidirectional
     composite stream that receives its input  from an associated input
     stream and sends    its output to   an associated output stream.

type  n. 
     1. a set of objects, usually with common structure, behavior, or
     purpose.  (Note that the expression "X is of type S_A" naturally
     implies that "X is of type S_B" if S_A is a subtype of S_B.)  2.
     (immediately following the name of a type) a subtype of that type.
     "The type ‘vector’ is an array type."

type declaration  n. 
     a declaration that asserts that every reference to a specified
     binding within the scope of the declaration results in some object
     of the specified type.

type equivalent  adj. (of two types X and Y)
     having the same elements; that is, X is a subtype of Y and Y is a
     subtype of X.

type expand  n.
     to fully expand a type specifier, removing any references to
     derived types.  (Common Lisp provides no program interface to cause
     this to occur, but the semantics of Common Lisp are such that every
     implementation must be able to do this internally, and some
     situations involving type specifiers are most easily described in
     terms of a fully expanded type specifier.)

type specifier  n. 
     an expression that denotes a type.  "The symbol ‘random-state’,
     the list ‘(integer 3 5)’, the list ‘(and list (not null))’, and
     the class named ‘standard-class’ are type specifiers."



File: ansicl,  Node: U,  Next: V,  Prev: T,  Up: Glossary

U
=

unbound
     adj.  not having an associated denotation in a binding.  See *note
     bound: glos-bound.

unbound variable  n.
     a name that is syntactically plausible as the name of a variable
     but which is not bound in the variable namespace.

undefined function  n.
     a name that is syntactically plausible as the name of a function
     but which is not bound in the function namespace.

unintern  v.t. (a symbol in a package)
     to make the symbol not be present in that package.  (The symbol
     might continue to be accessible by inheritance.)

uninterned  adj. (of a symbol)
     not accessible in any package; i.e., not interned₁.

universal time  n.
     time, represented as a non-negative integer number of seconds.
     Absolute universal time is measured as an offset from the
     beginning of the year 1900 (ignoring leap seconds).  See *note
     Section 25.1.4.2 (Universal Time): UniversalTime.

unqualified method  n. 
     a method with no qualifiers.

unregistered package  n.
     a package object that is not present in the package registry.  An
     unregistered package has no name; i.e., its name is ‘nil’.  See
     the function *note delete-package::.

unsafe  adj. (of code)
     not safe.  (Note that, unless explicitly specified otherwise, if a
     particular kind of error checking is guaranteed only in a safe
     context, the same checking might or might not occur in that
     context if it were unsafe; describing a context as unsafe means
     that certain kinds of error checking are not reliably enabled but
     does not guarantee that error checking is definitely disabled.)

unsafe call  n.
     a call that is not a safe call.  For more detailed information,
     see *note Section 3.5.1.1 (Safe and Unsafe Calls):
     SafeAndUnsafeCalls.

upgrade  v.t. (a declared type to an actual type)
     1. (when creating an array) to substitute an actual array element
     type for an expressed array element type when choosing an
     appropriately specialized array representation.  See the function
     *note upgraded-array-element-type::.  2. (when creating a complex)
     to substitute an actual complex part type for an expressed complex
     part type when choosing an appropriately specialized complex
     representation.  See the function *note
     upgraded-complex-part-type::.

upgraded array element type  n. (of a type)
     a type that is a supertype of the type and that is used instead of
     the type whenever the type is used as an array element type for
     object creation or type discrimination.  See *note Section
     15.1.2.1 (Array Upgrading): ArrayUpgrading.

upgraded complex part type  n. (of a type)
     a type that is a supertype of the type and that is used instead of
     the type whenever the type is used as a complex part type for
     object creation or type discrimination.  See the function *note
     upgraded-complex-part-type::.

uppercase  adj. (of a character)
     being among standard characters corresponding to the capital
     letters ‘A’ through ‘Z’, or being some other
     implementation-defined character that is defined by the
     implementation to be uppercase.  See *note Section 13.1.4.3
     (Characters With Case): CharactersWithCase.

use  v.t. (a package P₁)
     to inherit the external symbols of P₁.  (If a package P₂ uses P₁,
     the external symbols of P₁ become internal symbols of P₂ unless
     they are explicitly exported.)  "The package ‘CL-USER’ uses the
     package ‘CL’."

use list  n. (of a package)
     a (possibly empty) list associated with each package which
     determines what other packages are currently being used by that
     package.

user  n. 
     an active entity, typically a human, that invokes or interacts
     with a program at run time, but that is not necessarily a
     programmer.



File: ansicl,  Node: V,  Next: W,  Prev: U,  Up: Glossary

V
=

valid array dimension  n. 
     a fixnum suitable for use as an array dimension.  Such a fixnum
     must be greater than or equal to zero, and less than the value of
     ‘array-dimension-limit’.  When multiple array dimensions are to be
     used together to specify a multi-dimensional array, there is also
     an implied constraint that the product of all of the dimensions be
     less than the value of ‘array-total-size-limit’.

valid array index  n. (of an array)
     a fixnum suitable for use as one of possibly several indices needed
     to name an element of the array according to a multi-dimensional
     Cartesian coordinate system. Such a fixnum must be greater than or
     equal to zero, and must be less than the corresponding dimension₁
     of the array.  (Unless otherwise explicitly specified, the phrase
     "a list of valid array indices" further implies that the length of
     the list must be the same as the rank of the array.)  "For a ‘2’
     by ‘3’ array, valid array indices for the first  dimension are ‘0’
     and ‘1’, and valid array indices for the second dimension are ‘0’,
     ‘1’ and ‘2’."

valid array row-major index  n. (of an array,
     which might have any number of dimensions₂) a single fixnum
     suitable for use in naming any element of the array, by viewing
     the array's storage as a linear series of elements in row-major
     order.  Such a fixnum must be greater than or equal to zero, and
     less than the array total size of the array.

valid fill pointer  n. (of an array)
     a fixnum suitable for use as a fill pointer for the array.  Such a
     fixnum must be greater than or equal to zero, and less than or
     equal to the array total size of the array.

valid logical pathname host  n.
     a string that has been defined as the name of a logical host.  See
     the function *note load-logical-pathname-translations::.

valid pathname device  n.
     a string, ‘nil’, :unspecific, or some other object defined by the
     implementation to be a valid pathname device.

valid pathname directory  n.
     a string, a list of strings, ‘nil’, :wild, :unspecific, or some
     other object defined by the implementation to be a valid directory
     component.

valid pathname host  n.
     a valid physical pathname host or a valid logical pathname host.

valid pathname name  n.
     a string, ‘nil’, :wild, :unspecific, or some other object defined
     by the implementation to be a valid pathname name.

valid pathname type  n.
     a string, ‘nil’, :wild, :unspecific.

valid pathname version  n.
     a non-negative integer, or one of :wild, :newest, :unspecific, or
     ‘nil’.  The symbols :oldest, :previous, and :installed are
     semi-standard special version symbols.

valid physical pathname host  n.
     any of a string, a list of strings, or the symbol :unspecific,
     that is recognized by the implementation as the name of a host.

valid sequence index  n. (of a sequence)
     an integer suitable for use to name an element of the sequence.
     Such an integer must be greater than or equal to zero, and must be
     less than the length of the sequence.  (If the sequence is an
     array, the valid sequence index is further constrained to be a
     fixnum.)

value  n. 
     1. a. one of possibly several objects that are the result of an
     evaluation.  b. (in a situation where exactly one value is
     expected from the evaluation of a form) the primary value returned
     by the form.  c. (of forms in an implicit progn) one of possibly
     several objects that result from the evaluation of the last form,
     or ‘nil’ if there are no forms.  2. an object associated with a
     name in a binding.  3. (of a symbol) the value of the dynamic
     variable named by that symbol.  4. an object associated with a key
     in an association list, a  property list, or a  hash table.

value cell  n. Trad. (of a symbol)
     The place which holds the value, if any, of the dynamic variable
     named by that symbol, and which is accessed by ‘symbol-value’.
     See *note cell: glos-cell.

variable  n. 
     a binding in the "variable" namespace.  See *note Section
     3.1.2.1.1 (Symbols as Forms): SymbolsAsForms.

vector  n. 
     a one-dimensional array.

vertical-bar  n.
     the standard character that is called "vertical bar" (‘|’).  See
     *note Figure 2.5: StdCharsThree.



File: ansicl,  Node: W,  Next: Y,  Prev: V,  Up: Glossary

W
=

whitespace  n. 
     1. one or more characters that are either the graphic character
     ‘#\Space’ or else non-graphic characters such as ‘#\Newline’ that
     only move the print position.  2. a. n. the syntax type of a
     character that is a token separator.  For details, see *note
     Section 2.1.4.7 (Whitespace Characters): WhitespaceChars.  b.
     adj. (of a character) having the whitespace[2a] syntax type₂.  c.
     n. a whitespace[2b] character.

wild  adj.
     1. (of a namestring) using an implementation-defined syntax for
     naming files, which might "match" any of possibly several possible
     filenames, and which can therefore be used to refer to the
     aggregate of the files named by those filenames.  2. (of a
     pathname) a structured representation of a name which might
     "match" any of possibly several pathnames, and which can therefore
     be used to refer to the aggregate of the files named by those
     pathnames.  The set of wild pathnames includes, but is not
     restricted to, pathnames which have a component which is :wild, or
     which have a directory component which contains :wild or
     :wild-inferors.  See the function *note wild-pathname-p::.

write  v.t. 
     1. (a binding or slot or component) to change the value of the
     binding or slot.  2. (an object to a stream) to output a
     representation of the object to the stream.

writer  n.
     a function that writes₁ a variable or slot.



File: ansicl,  Node: Y,  Prev: W,  Up: Glossary

Y
=

yield  v.t. (values)
     to produce the values as the result of evaluation.  "The form ‘(+
     2 3)’ yields ‘5’."



File: ansicl,  Node: Appendix,  Next: Index,  Prev: Glossary,  Up: Top

Appendix A Appendix
*******************

* Menu:

* Removed Language Features::


File: ansicl,  Node: Removed Language Features,  Up: Appendix

A.1 Removed Language Features
=============================

* Menu:

* Requirements for removed and deprecated features::
* Removed Types::
* Removed Operators::
* Removed Argument Conventions::
* Removed Variables::
* Removed Reader Syntax::
* Packages No Longer Required::


File: ansicl,  Node: Requirements for removed and deprecated features,  Next: Removed Types,  Up: Removed Language Features

A.1.1 Requirements for removed and deprecated features
------------------------------------------------------

For this standard, some features from the language described in `Common
Lisp: The Language' have been removed, and others have been deprecated
(and will most likely not appear in future Common Lisp standards).
Which features were removed and which were deprecated was decided on a
case-by-case basis by the X3J13 committee.

Conforming implementations that wish to retain any removed features for
compatibility must assure that such compatibility does not interfere
with the correct function of conforming programs.  For example, symbols
corresponding to the names of removed functions may not appear in the
the ‘COMMON-LISP’ package.  (Note, however, that this specification has
been devised in such a way that there can be a package named ‘LISP’
which can contain such symbols.)

Conforming implementations must implement all deprecated features.  For
a list of deprecated features, see *note Section 1.8 (Deprecated
Language Features): Deprecated Language Features.


File: ansicl,  Node: Removed Types,  Next: Removed Operators,  Prev: Requirements for removed and deprecated features,  Up: Removed Language Features

A.1.2 Removed Types
-------------------

The type ‘string-char’ was removed.


File: ansicl,  Node: Removed Operators,  Next: Removed Argument Conventions,  Prev: Removed Types,  Up: Removed Language Features

A.1.3 Removed Operators
-----------------------

The functions ‘int-char’ , ‘char-bits’ , ‘char-font’ , ‘make-char’ ,
‘char-bit’ , ‘set-char-bit’ , ‘string-char-p’ , and ‘commonp’ were
removed.

The special operator ‘compiler-let’ was removed.


File: ansicl,  Node: Removed Argument Conventions,  Next: Removed Variables,  Prev: Removed Operators,  Up: Removed Language Features

A.1.4 Removed Argument Conventions
----------------------------------

The FONT argument to ‘digit-char’ was removed.  The BITS and FONT
arguments to ‘code-char’ 

were removed.


File: ansicl,  Node: Removed Variables,  Next: Removed Reader Syntax,  Prev: Removed Argument Conventions,  Up: Removed Language Features

A.1.5 Removed Variables
-----------------------

The variables ‘char-font-limit’ , ‘char-bits-limit’ , ‘char-control-bit’ ,
‘char-meta-bit’ , ‘char-super-bit’ , ‘char-hyper-bit’ , and
‘*break-on-warnings*’ were removed.


File: ansicl,  Node: Removed Reader Syntax,  Next: Packages No Longer Required,  Prev: Removed Variables,  Up: Removed Language Features

A.1.6 Removed Reader Syntax
---------------------------

The "‘#,’" reader macro in standard syntax was removed.


File: ansicl,  Node: Packages No Longer Required,  Prev: Removed Reader Syntax,  Up: Removed Language Features

A.1.7 Packages No Longer Required
---------------------------------

The packages ‘LISP’ , ‘USER’ , and ‘SYSTEM’ are no longer required.  It
is valid for packages with one or more of these names to be provided by
a conforming implementation as extensions.


File: ansicl,  Node: Index,  Next: Symbol Index,  Prev: Appendix,  Up: Top

Index
*****

 [index ]
* Menu:

* #:                                     Sharpsign.           (line   6)
* &allow-other-keys:                     Ordinary Lambda Lists.
                                                              (line 106)
* &aux:                                  Ordinary Lambda Lists.
                                                              (line 213)
* &body:                                 Macro Lambda Lists.  (line  64)
* &environment:                          Macro Lambda Lists.  (line  83)
* &key:                                  Ordinary Lambda Lists.
                                                              (line 106)
* &optional:                             Ordinary Lambda Lists.
                                                              (line  75)
* &rest:                                 Ordinary Lambda Lists.
                                                              (line  93)
* &whole:                                Macro Lambda Lists.  (line  73)
* ':                                     Single-Quote.        (line   6)
* (:                                     Left-Parenthesis.    (line   6)
* ():                                    Notational Conventions.
                                                              (line 382)
* (setf class-name):                     setf class-name.     (line   6)
* (setf documentation):                  documentation; setf documentation.
                                                              (line   6)
* ):                                     Right-Parenthesis.   (line   6)
* * <1>:                                 *; **; ***.          (line   6)
* *:                                     * (Function).        (line   6)
* **:                                    *; **; ***.          (line   6)
* ***:                                   *; **; ***.          (line   6)
* *break-on-signals*:                    *break-on-signals*.  (line   6)
* *break-on-warnings*:                   Removed Variables.   (line   8)
* *compile-file-pathname*:               *compile-file-pathname*; *compile-file-truename*.
                                                              (line   6)
* *compile-file-truename*:               *compile-file-pathname*; *compile-file-truename*.
                                                              (line   6)
* *compile-print*:                       *compile-print*; *compile-verbose*.
                                                              (line   6)
* *compile-verbose*:                     *compile-print*; *compile-verbose*.
                                                              (line   6)
* *debug-io*:                            *debug-io*; *error-output*; *query-io*; *standard-input*; *standard-out+.
                                                              (line   6)
* *debugger-hook*:                       *debugger-hook*.     (line   6)
* *default-pathname-defaults*:           *default-pathname-defaults*.
                                                              (line   6)
* *error-output*:                        *debug-io*; *error-output*; *query-io*; *standard-input*; *standard-out+.
                                                              (line   6)
* *features* <1>:                        *features*.          (line   6)
* *features* <2>:                        Sharpsign.           (line 439)
* *features*:                            Conforming Programs. (line  64)
* *gensym-counter*:                      *gensym-counter*.    (line   6)
* *load-pathname*:                       *load-pathname*; *load-truename*.
                                                              (line   6)
* *load-print*:                          *load-print*; *load-verbose*.
                                                              (line   6)
* *load-truename*:                       *load-pathname*; *load-truename*.
                                                              (line   6)
* *load-verbose*:                        *load-print*; *load-verbose*.
                                                              (line   6)
* *macroexpand-hook*:                    *macroexpand-hook*.  (line   6)
* *modules*:                             *modules*.           (line   6)
* *package*:                             *package*.           (line   6)
* *print-array*:                         *print-array*.       (line   6)
* *print-base*:                          *print-base*; *print-radix*.
                                                              (line   6)
* *print-case*:                          *print-case*.        (line   6)
* *print-circle* <1>:                    *print-circle*.      (line   6)
* *print-circle*:                        Sharpsign.           (line 399)
* *print-escape*:                        *print-escape*.      (line   6)
* *print-gensym*:                        *print-gensym*.      (line   6)
* *print-length*:                        *print-level*; *print-length*.
                                                              (line   6)
* *print-level*:                         *print-level*; *print-length*.
                                                              (line   6)
* *print-lines*:                         *print-lines*.       (line   6)
* *print-miser-width*:                   *print-miser-width*. (line   6)
* *print-pprint-dispatch*:               *print-pprint-dispatch*.
                                                              (line   6)
* *print-pretty*:                        *print-pretty*.      (line   6)
* *print-radix*:                         *print-base*; *print-radix*.
                                                              (line   6)
* *print-readably*:                      *print-readably*.    (line   6)
* *print-right-margin*:                  *print-right-margin*.
                                                              (line   6)
* *query-io*:                            *debug-io*; *error-output*; *query-io*; *standard-input*; *standard-out+.
                                                              (line   6)
* *random-state*:                        *random-state*.      (line   6)
* *read-base* <1>:                       *read-base*.         (line   6)
* *read-base*:                           Sharpsign.           (line 224)
* *read-default-float-format*:           *read-default-float-format*.
                                                              (line   6)
* *read-eval* <1>:                       *read-eval*.         (line   6)
* *read-eval*:                           Sharpsign.           (line 209)
* *read-suppress*:                       *read-suppress*.     (line   6)
* *readtable*:                           *readtable*.         (line   6)
* *standard-input*:                      *debug-io*; *error-output*; *query-io*; *standard-input*; *standard-out+.
                                                              (line   6)
* *standard-output*:                     *debug-io*; *error-output*; *query-io*; *standard-input*; *standard-out+.
                                                              (line   6)
* *terminal-io*:                         *terminal-io*.       (line   6)
* *trace-output*:                        *debug-io*; *error-output*; *query-io*; *standard-input*; *standard-out+.
                                                              (line   6)
* + <1>:                                 +; ++; +++.          (line   6)
* + <2>:                                 + (Function).        (line   6)
* +:                                     Method Selection and Combination.
                                                              (line 239)
* ++:                                    +; ++; +++.          (line   6)
* +++:                                   +; ++; +++.          (line   6)
* ,:                                     Comma.               (line   6)
* - <1>:                                 - (Variable).        (line   6)
* -:                                     - (Function).        (line   6)
* .:                                     Left-Parenthesis.    (line  21)
* .. <1>:                                *print-lines*.       (line  21)
* ..:                                    Re-Reading Abbreviated Expressions.
                                                              (line   6)
* ... <1>:                               pprint-pop.          (line  34)
* ...:                                   Re-Reading Abbreviated Expressions.
                                                              (line   6)
* / <1>:                                 /; //; ///.          (line   6)
* /:                                     / (Function).        (line   6)
* //:                                    /; //; ///.          (line   6)
* ///:                                   /; //; ///.          (line   6)
* /=:                                    =; /=; <; >; <=; >=. (line   6)
* 1+:                                    1+; 1-.              (line   6)
* 1-:                                    1+; 1-.              (line   6)
* :absolute:                             Interpreting Pathname Component Values.
                                                              (line 205)
* :back:                                 Interpreting Pathname Component Values.
                                                              (line 239)
* :common:                               Interpreting Pathname Component Values.
                                                              (line  58)
* :compile-toplevel:                     eval-when.           (line  14)
* :execute:                              eval-when.           (line  15)
* :load-toplevel:                        eval-when.           (line  14)
* :local:                                Interpreting Pathname Component Values.
                                                              (line  44)
* :relative:                             Interpreting Pathname Component Values.
                                                              (line 205)
* :unspecific:                           Interpreting Pathname Component Values.
                                                              (line 109)
* :up:                                   Interpreting Pathname Component Values.
                                                              (line 239)
* :wild:                                 Interpreting Pathname Component Values.
                                                              (line  90)
* :wild-inferiors:                       Interpreting Pathname Component Values.
                                                              (line 104)
* ;:                                     Semicolon.           (line   6)
* <:                                     =; /=; <; >; <=; >=. (line   6)
* <=:                                    =; /=; <; >; <=; >=. (line   6)
* =:                                     =; /=; <; >; <=; >=. (line   6)
* >:                                     =; /=; <; >; <=; >=. (line   6)
* >=:                                    =; /=; <; >; <=; >=. (line   6)
* `:                                     Backquote.           (line   6)
* A (format directive):                  FORMAT Printer Operations.
                                                              (line   9)
* A (sharpsign reader macro):            Sharpsign.           (line 323)
* abort <1>:                             abort; continue; muffle-warning; store-value; use-value.
                                                              (line   6)
* abort:                                 abort (Restart).     (line   6)
* abs:                                   abs.                 (line   6)
* accessible:                            Introduction to Packages.
                                                              (line  84)
* acons:                                 acons.               (line   6)
* acos:                                  asin; acos; atan.    (line   6)
* acosh:                                 sinh; cosh; tanh; asinh; acosh; atanh.
                                                              (line   6)
* active:                                Array Elements.      (line  57)
* actual array element type:             Specialized Arrays.  (line  38)
* add-method:                            add-method.          (line   6)
* adjoin:                                adjoin.              (line   6)
* adjust-array:                          adjust-array.        (line   6)
* adjustable-array-p:                    adjustable-array-p.  (line   6)
* allocate-instance:                     allocate-instance.   (line   6)
* alpha-char-p:                          alpha-char-p.        (line   6)
* alphanumericp:                         alphanumericp.       (line   6)
* Ampersand (format directive):          FORMAT Basic Output. (line  59)
* and <1>:                               Method Selection and Combination.
                                                              (line 239)
* and <2>:                               and (Macro).         (line   6)
* and:                                   and (Type Specifier).
                                                              (line   6)
* append <1>:                            append.              (line   6)
* append:                                Method Selection and Combination.
                                                              (line 239)
* apply:                                 apply.               (line   6)
* apropos:                               apropos; apropos-list.
                                                              (line   6)
* apropos-list:                          apropos; apropos-list.
                                                              (line   6)
* aref:                                  aref.                (line   6)
* arithmetic-error:                      arithmetic-error.    (line   6)
* arithmetic-error-operands:             arithmetic-error-operands; arithmetic-error-operation.
                                                              (line   6)
* arithmetic-error-operation:            arithmetic-error-operands; arithmetic-error-operation.
                                                              (line   6)
* array <1>:                             array.               (line   6)
* array:                                 Sharpsign.           (line 323)
* array-dimension:                       array-dimension.     (line   6)
* array-dimension-limit:                 array-dimension-limit.
                                                              (line   6)
* array-dimensions:                      array-dimensions.    (line   6)
* array-displacement:                    array-displacement.  (line   6)
* array-element-type:                    array-element-type.  (line   6)
* array-has-fill-pointer-p:              array-has-fill-pointer-p.
                                                              (line   6)
* array-in-bounds-p:                     array-in-bounds-p.   (line   6)
* array-rank:                            array-rank.          (line   6)
* array-rank-limit:                      array-rank-limit.    (line   6)
* array-row-major-index:                 array-row-major-index.
                                                              (line   6)
* array-total-size:                      array-total-size.    (line   6)
* array-total-size-limit:                array-total-size-limit.
                                                              (line   6)
* arrayp:                                arrayp.              (line   6)
* ash:                                   ash.                 (line   6)
* asin:                                  asin; acos; atan.    (line   6)
* asinh:                                 sinh; cosh; tanh; asinh; acosh; atanh.
                                                              (line   6)
* assert:                                assert.              (line   6)
* assoc:                                 assoc; assoc-if; assoc-if-not.
                                                              (line   6)
* assoc-if:                              assoc; assoc-if; assoc-if-not.
                                                              (line   6)
* assoc-if-not:                          assoc; assoc-if; assoc-if-not.
                                                              (line   6)
* association list:                      Conses as Lists.     (line  38)
* Asterisk (format directive):           FORMAT Control-Flow Operations.
                                                              (line   9)
* Asterisk (sharpsign reader macro):     Sharpsign.           (line 151)
* atan:                                  asin; acos; atan.    (line   6)
* atanh:                                 sinh; cosh; tanh; asinh; acosh; atanh.
                                                              (line   6)
* atom <1>:                              atom (Function).     (line   6)
* atom:                                  atom (Type).         (line   6)
* B (format directive):                  FORMAT Radix Control.
                                                              (line  73)
* B (sharpsign reader macro):            Sharpsign.           (line 224)
* Backquote (reader macro):              Backquote.           (line   6)
* Backslash (sharpsign reader macro):    Sharpsign.           (line  78)
* base-char:                             base-char.           (line   6)
* base-string:                           base-string.         (line   6)
* bidirectional:                         Introduction to Streams.
                                                              (line  56)
* bignum:                                bignum.              (line   6)
* binary:                                Introduction to Streams.
                                                              (line   9)
* binding:                               Introduction to Environments.
                                                              (line   6)
* bit <1>:                               bit; sbit.           (line   6)
* bit:                                   bit (Type).          (line   6)
* bit vector:                            Specialized Arrays.  (line  78)
* bit-and:                               bit-and; bit-andc1; bit-andc2; bit-eqv; bit-ior; bit-nand; bit-nor; bit+.
                                                              (line   6)
* bit-andc1:                             bit-and; bit-andc1; bit-andc2; bit-eqv; bit-ior; bit-nand; bit-nor; bit+.
                                                              (line   6)
* bit-andc2:                             bit-and; bit-andc1; bit-andc2; bit-eqv; bit-ior; bit-nand; bit-nor; bit+.
                                                              (line   6)
* bit-eqv:                               bit-and; bit-andc1; bit-andc2; bit-eqv; bit-ior; bit-nand; bit-nor; bit+.
                                                              (line   6)
* bit-ior:                               bit-and; bit-andc1; bit-andc2; bit-eqv; bit-ior; bit-nand; bit-nor; bit+.
                                                              (line   6)
* bit-nand:                              bit-and; bit-andc1; bit-andc2; bit-eqv; bit-ior; bit-nand; bit-nor; bit+.
                                                              (line   6)
* bit-nor:                               bit-and; bit-andc1; bit-andc2; bit-eqv; bit-ior; bit-nand; bit-nor; bit+.
                                                              (line   6)
* bit-not:                               bit-and; bit-andc1; bit-andc2; bit-eqv; bit-ior; bit-nand; bit-nor; bit+.
                                                              (line   6)
* bit-orc1:                              bit-and; bit-andc1; bit-andc2; bit-eqv; bit-ior; bit-nand; bit-nor; bit+.
                                                              (line   6)
* bit-orc2:                              bit-and; bit-andc1; bit-andc2; bit-eqv; bit-ior; bit-nand; bit-nor; bit+.
                                                              (line   6)
* bit-vector <1>:                        bit-vector.          (line   6)
* bit-vector:                            Sharpsign.           (line 151)
* bit-vector-p:                          bit-vector-p.        (line   6)
* bit-xor:                               bit-and; bit-andc1; bit-andc2; bit-eqv; bit-ior; bit-nand; bit-nor; bit+.
                                                              (line   6)
* block:                                 block.               (line   6)
* boa lambda list:                       Boa Lambda Lists.    (line   6)
* boole:                                 boole.               (line   6)
* boole-1:                               boole-1; boole-2; boole-and; boole-andc1; boole-andc2; boole-c1; boole-+.
                                                              (line   6)
* boole-2:                               boole-1; boole-2; boole-and; boole-andc1; boole-andc2; boole-c1; boole-+.
                                                              (line   6)
* boole-and:                             boole-1; boole-2; boole-and; boole-andc1; boole-andc2; boole-c1; boole-+.
                                                              (line   6)
* boole-andc1:                           boole-1; boole-2; boole-and; boole-andc1; boole-andc2; boole-c1; boole-+.
                                                              (line   6)
* boole-andc2:                           boole-1; boole-2; boole-and; boole-andc1; boole-andc2; boole-c1; boole-+.
                                                              (line   6)
* boole-c1:                              boole-1; boole-2; boole-and; boole-andc1; boole-andc2; boole-c1; boole-+.
                                                              (line   6)
* boole-c2:                              boole-1; boole-2; boole-and; boole-andc1; boole-andc2; boole-c1; boole-+.
                                                              (line   6)
* boole-clr:                             boole-1; boole-2; boole-and; boole-andc1; boole-andc2; boole-c1; boole-+.
                                                              (line   6)
* boole-eqv:                             boole-1; boole-2; boole-and; boole-andc1; boole-andc2; boole-c1; boole-+.
                                                              (line   6)
* boole-ior:                             boole-1; boole-2; boole-and; boole-andc1; boole-andc2; boole-c1; boole-+.
                                                              (line   6)
* boole-nand:                            boole-1; boole-2; boole-and; boole-andc1; boole-andc2; boole-c1; boole-+.
                                                              (line   6)
* boole-nor:                             boole-1; boole-2; boole-and; boole-andc1; boole-andc2; boole-c1; boole-+.
                                                              (line   6)
* boole-orc1:                            boole-1; boole-2; boole-and; boole-andc1; boole-andc2; boole-c1; boole-+.
                                                              (line   6)
* boole-orc2:                            boole-1; boole-2; boole-and; boole-andc1; boole-andc2; boole-c1; boole-+.
                                                              (line   6)
* boole-set:                             boole-1; boole-2; boole-and; boole-andc1; boole-andc2; boole-c1; boole-+.
                                                              (line   6)
* boole-xor:                             boole-1; boole-2; boole-and; boole-andc1; boole-andc2; boole-c1; boole-+.
                                                              (line   6)
* boolean:                               boolean.             (line   6)
* both-case-p:                           upper-case-p; lower-case-p; both-case-p.
                                                              (line   6)
* bound declaration:                     Declaration Scope.   (line  11)
* boundp:                                boundp.              (line   6)
* break:                                 break.               (line   6)
* broadcast-stream:                      broadcast-stream.    (line   6)
* broadcast-stream-streams:              broadcast-stream-streams.
                                                              (line   6)
* built-in-class:                        built-in-class.      (line   6)
* butlast:                               butlast; nbutlast.   (line   6)
* byte:                                  byte; byte-size; byte-position.
                                                              (line   6)
* byte-position:                         byte; byte-size; byte-position.
                                                              (line   6)
* byte-size:                             byte; byte-size; byte-position.
                                                              (line   6)
* C (format directive):                  FORMAT Basic Output. (line   9)
* C (sharpsign reader macro):            Sharpsign.           (line 296)
* caaaar:                                car; cdr; caar; cadr; cdar; cddr; caaar; caadr; cadar; caddr; cdaar; cd+.
                                                              (line   6)
* caaadr:                                car; cdr; caar; cadr; cdar; cddr; caaar; caadr; cadar; caddr; cdaar; cd+.
                                                              (line   6)
* caaar:                                 car; cdr; caar; cadr; cdar; cddr; caaar; caadr; cadar; caddr; cdaar; cd+.
                                                              (line   6)
* caadar:                                car; cdr; caar; cadr; cdar; cddr; caaar; caadr; cadar; caddr; cdaar; cd+.
                                                              (line   6)
* caaddr:                                car; cdr; caar; cadr; cdar; cddr; caaar; caadr; cadar; caddr; cdaar; cd+.
                                                              (line   6)
* caadr:                                 car; cdr; caar; cadr; cdar; cddr; caaar; caadr; cadar; caddr; cdaar; cd+.
                                                              (line   6)
* caar:                                  car; cdr; caar; cadr; cdar; cddr; caaar; caadr; cadar; caddr; cdaar; cd+.
                                                              (line   6)
* cadaar:                                car; cdr; caar; cadr; cdar; cddr; caaar; caadr; cadar; caddr; cdaar; cd+.
                                                              (line   6)
* cadadr:                                car; cdr; caar; cadr; cdar; cddr; caaar; caadr; cadar; caddr; cdaar; cd+.
                                                              (line   6)
* cadar:                                 car; cdr; caar; cadr; cdar; cddr; caaar; caadr; cadar; caddr; cdaar; cd+.
                                                              (line   6)
* caddar:                                car; cdr; caar; cadr; cdar; cddr; caaar; caadr; cadar; caddr; cdaar; cd+.
                                                              (line   6)
* cadddr:                                car; cdr; caar; cadr; cdar; cddr; caaar; caadr; cadar; caddr; cdaar; cd+.
                                                              (line   6)
* caddr:                                 car; cdr; caar; cadr; cdar; cddr; caaar; caadr; cadar; caddr; cdaar; cd+.
                                                              (line   6)
* cadr:                                  car; cdr; caar; cadr; cdar; cddr; caaar; caadr; cadar; caddr; cdaar; cd+.
                                                              (line   6)
* call-arguments-limit:                  call-arguments-limit.
                                                              (line   6)
* call-method:                           call-method; make-method.
                                                              (line   6)
* call-next-method:                      call-next-method.    (line   6)
* car:                                   car; cdr; caar; cadr; cdar; cddr; caaar; caadr; cadar; caddr; cdaar; cd+.
                                                              (line   6)
* case:                                  case; ccase; ecase.  (line   6)
* case in symbol names:                  Notational Conventions.
                                                              (line 326)
* catch:                                 catch.               (line   6)
* ccase:                                 case; ccase; ecase.  (line   6)
* cdaaar:                                car; cdr; caar; cadr; cdar; cddr; caaar; caadr; cadar; caddr; cdaar; cd+.
                                                              (line   6)
* cdaadr:                                car; cdr; caar; cadr; cdar; cddr; caaar; caadr; cadar; caddr; cdaar; cd+.
                                                              (line   6)
* cdaar:                                 car; cdr; caar; cadr; cdar; cddr; caaar; caadr; cadar; caddr; cdaar; cd+.
                                                              (line   6)
* cdadar:                                car; cdr; caar; cadr; cdar; cddr; caaar; caadr; cadar; caddr; cdaar; cd+.
                                                              (line   6)
* cdaddr:                                car; cdr; caar; cadr; cdar; cddr; caaar; caadr; cadar; caddr; cdaar; cd+.
                                                              (line   6)
* cdadr:                                 car; cdr; caar; cadr; cdar; cddr; caaar; caadr; cadar; caddr; cdaar; cd+.
                                                              (line   6)
* cdar:                                  car; cdr; caar; cadr; cdar; cddr; caaar; caadr; cadar; caddr; cdaar; cd+.
                                                              (line   6)
* cddaar:                                car; cdr; caar; cadr; cdar; cddr; caaar; caadr; cadar; caddr; cdaar; cd+.
                                                              (line   6)
* cddadr:                                car; cdr; caar; cadr; cdar; cddr; caaar; caadr; cadar; caddr; cdaar; cd+.
                                                              (line   6)
* cddar:                                 car; cdr; caar; cadr; cdar; cddr; caaar; caadr; cadar; caddr; cdaar; cd+.
                                                              (line   6)
* cdddar:                                car; cdr; caar; cadr; cdar; cddr; caaar; caadr; cadar; caddr; cdaar; cd+.
                                                              (line   6)
* cddddr:                                car; cdr; caar; cadr; cdar; cddr; caaar; caadr; cadar; caddr; cdaar; cd+.
                                                              (line   6)
* cdddr:                                 car; cdr; caar; cadr; cdar; cddr; caaar; caadr; cadar; caddr; cdaar; cd+.
                                                              (line   6)
* cddr:                                  car; cdr; caar; cadr; cdar; cddr; caaar; caadr; cadar; caddr; cdaar; cd+.
                                                              (line   6)
* cdr:                                   car; cdr; caar; cadr; cdar; cddr; caaar; caadr; cadar; caddr; cdaar; cd+.
                                                              (line   6)
* ceiling:                               floor; ffloor; ceiling; fceiling; truncate; ftruncate; round; fround.
                                                              (line   6)
* cell-error:                            cell-error.          (line   6)
* cell-error-name:                       cell-error-name.     (line   6)
* cerror:                                cerror.              (line   6)
* change-class:                          change-class.        (line   6)
* char:                                  char; schar.         (line   6)
* char-bit:                              Removed Operators.   (line   7)
* char-bits:                             Removed Operators.   (line   6)
* char-bits-limit:                       Removed Variables.   (line   6)
* char-code:                             char-code.           (line   6)
* char-code-limit:                       char-code-limit.     (line   6)
* char-control-bit:                      Removed Variables.   (line   6)
* char-downcase:                         char-upcase; char-downcase.
                                                              (line   6)
* char-equal:                            char=; char/=; char<; char>; char<=; char>=; char-equal; char-not-equal+.
                                                              (line   6)
* char-font:                             Removed Operators.   (line   6)
* char-font-limit:                       Removed Variables.   (line   6)
* char-greaterp:                         char=; char/=; char<; char>; char<=; char>=; char-equal; char-not-equal+.
                                                              (line   6)
* char-hyper-bit:                        Removed Variables.   (line   7)
* char-int:                              char-int.            (line   6)
* char-lessp:                            char=; char/=; char<; char>; char<=; char>=; char-equal; char-not-equal+.
                                                              (line   6)
* char-meta-bit:                         Removed Variables.   (line   7)
* char-name:                             char-name.           (line   6)
* char-not-equal:                        char=; char/=; char<; char>; char<=; char>=; char-equal; char-not-equal+.
                                                              (line   6)
* char-not-greaterp:                     char=; char/=; char<; char>; char<=; char>=; char-equal; char-not-equal+.
                                                              (line   6)
* char-not-lessp:                        char=; char/=; char<; char>; char<=; char>=; char-equal; char-not-equal+.
                                                              (line   6)
* char-super-bit:                        Removed Variables.   (line   7)
* char-upcase:                           char-upcase; char-downcase.
                                                              (line   6)
* char/=:                                char=; char/=; char<; char>; char<=; char>=; char-equal; char-not-equal+.
                                                              (line   6)
* char<:                                 char=; char/=; char<; char>; char<=; char>=; char-equal; char-not-equal+.
                                                              (line   6)
* char<=:                                char=; char/=; char<; char>; char<=; char>=; char-equal; char-not-equal+.
                                                              (line   6)
* char=:                                 char=; char/=; char<; char>; char<=; char>=; char-equal; char-not-equal+.
                                                              (line   6)
* char>:                                 char=; char/=; char<; char>; char<=; char>=; char-equal; char-not-equal+.
                                                              (line   6)
* char>=:                                char=; char/=; char<; char>; char<=; char>=; char-equal; char-not-equal+.
                                                              (line   6)
* character <1>:                         Introduction to Streams.
                                                              (line   8)
* character <2>:                         character (Function).
                                                              (line   6)
* character <3>:                         character (System Class).
                                                              (line   6)
* character <4>:                         Introduction to Characters.
                                                              (line   6)
* character:                             Sharpsign.           (line  78)
* characterp:                            characterp.          (line   6)
* check-type:                            check-type.          (line   6)
* circular list <1>:                     list (System Class). (line  20)
* circular list:                         Conses as Lists.     (line  20)
* Circumflex (format directive):         FORMAT Miscellaneous Pseudo-Operations.
                                                              (line  15)
* cis:                                   cis.                 (line   6)
* CL:                                    Standardized Packages.
                                                              (line  21)
* CL-USER:                               Standardized Packages.
                                                              (line 156)
* class <1>:                             class.               (line   6)
* class:                                 Introduction to Classes.
                                                              (line   6)
* class precedence list <1>:             Determining the Class Precedence List.
                                                              (line   9)
* class precedence list:                 Introduction to Classes.
                                                              (line  35)
* class-name:                            class-name.          (line   6)
* class-of:                              class-of.            (line   6)
* clear-input:                           clear-input.         (line   6)
* clear-output:                          finish-output; force-output; clear-output.
                                                              (line   6)
* close:                                 close.               (line   6)
* closed:                                Introduction to Streams.
                                                              (line  71)
* clrhash:                               clrhash.             (line   6)
* coalesce:                              Compiler Terminology.
                                                              (line  24)
* code-char <1>:                         Removed Argument Conventions.
                                                              (line   7)
* code-char:                             code-char.           (line   6)
* coerce:                                coerce.              (line   6)
* Colon (sharpsign reader macro):        Sharpsign.           (line 196)
* Comma (reader macro):                  Comma.               (line   6)
* comment <1>:                           Sharpsign.           (line 473)
* comment:                               Semicolon.           (line   6)
* COMMON-LISP <1>:                       Standardized Packages.
                                                              (line  21)
* COMMON-LISP:                           Symbols in the COMMON-LISP Package.
                                                              (line   7)
* COMMON-LISP-USER:                      Standardized Packages.
                                                              (line 156)
* commonp:                               Removed Operators.   (line   7)
* compilation environment:               Compiler Terminology.
                                                              (line  51)
* compilation-speed:                     optimize.            (line   9)
* compile <1>:                           eval-when.           (line  15)
* compile <2>:                           compile.             (line   6)
* compile:                               Compilation Semantics.
                                                              (line 161)
* compile time:                          Compiler Terminology.
                                                              (line  74)
* compile-file <1>:                      compile-file.        (line   6)
* compile-file:                          Compilation Semantics.
                                                              (line 162)
* compile-file-pathname:                 compile-file-pathname.
                                                              (line   6)
* compile-time definition:               Compiler Terminology.
                                                              (line  78)
* compiled code <1>:                     Loading.             (line   7)
* compiled code:                         Compiler Terminology.
                                                              (line  13)
* compiled file:                         Loading.             (line  13)
* compiled-function:                     compiled-function.   (line   6)
* compiled-function-p:                   compiled-function-p. (line   6)
* compiler:                              Compiler Terminology.
                                                              (line   8)
* compiler macro:                        Compilation Semantics.
                                                              (line 149)
* compiler-macro-function:               compiler-macro-function.
                                                              (line   6)
* complement:                            complement.          (line   6)
* complex <1>:                           Default Print-Object Methods.
                                                              (line  71)
* complex <2>:                           complex (Function).  (line   6)
* complex <3>:                           complex (System Class).
                                                              (line   6)
* complex:                               Sharpsign.           (line 296)
* complexp:                              complexp.            (line   6)
* compound type specifier:               Type Specifiers.     (line  53)
* compute-applicable-methods:            compute-applicable-methods.
                                                              (line   6)
* compute-restarts:                      compute-restarts.    (line   6)
* concatenate:                           concatenate.         (line   6)
* concatenated-stream:                   concatenated-stream. (line   6)
* concatenated-stream-streams:           concatenated-stream-streams.
                                                              (line   6)
* cond:                                  cond.                (line   6)
* condition:                             condition.           (line   6)
* condition designator:                  Creating Conditions. (line  17)
* condition reporter:                    Printing Conditions. (line   9)
* conditional newlines:                  Pretty Printer Concepts.
                                                              (line  35)
* conforming code:                       Conforming Programs. (line   6)
* conforming implementation:             Conforming Implementations.
                                                              (line   6)
* conforming program:                    Conforming Programs. (line   6)
* congruence:                            Introduction to Methods.
                                                              (line  49)
* conjugate:                             conjugate.           (line   6)
* cons <1>:                              cons (Function).     (line   6)
* cons <2>:                              cons (System Class). (line   6)
* cons <3>:                              Cons Concepts.       (line   6)
* cons <4>:                              Comma.               (line   6)
* cons:                                  Backquote.           (line   6)
* consequences:                          Error Terminology.   (line  82)
* consp:                                 consp.               (line   6)
* constantly:                            constantly.          (line   6)
* constantp:                             constantp.           (line   6)
* continue <1>:                          abort; continue; muffle-warning; store-value; use-value.
                                                              (line   6)
* continue:                              continue (Restart).  (line   6)
* control-error:                         control-error.       (line   6)
* copy-alist:                            copy-alist.          (line   6)
* copy-list:                             copy-list.           (line   6)
* copy-pprint-dispatch:                  copy-pprint-dispatch.
                                                              (line   6)
* copy-readtable:                        copy-readtable.      (line   6)
* copy-seq:                              copy-seq.            (line   6)
* copy-structure:                        copy-structure.      (line   6)
* copy-symbol:                           copy-symbol.         (line   6)
* copy-tree:                             copy-tree.           (line   6)
* cos:                                   sin; cos; tan.       (line   6)
* cosh:                                  sinh; cosh; tanh; asinh; acosh; atanh.
                                                              (line   6)
* count:                                 count; count-if; count-if-not.
                                                              (line   6)
* count-if:                              count; count-if; count-if-not.
                                                              (line   6)
* count-if-not:                          count; count-if; count-if-not.
                                                              (line   6)
* ctypecase:                             typecase; ctypecase; etypecase.
                                                              (line   6)
* current input base:                    *read-base*.         (line  22)
* current output base:                   *print-base*; *print-radix*.
                                                              (line  21)
* current package:                       Introduction to Packages.
                                                              (line   7)
* current pprint dispatch table:         Pretty Printer Concepts.
                                                              (line 138)
* current readtable:                     Readtables.          (line  25)
* D (format directive):                  FORMAT Radix Control.
                                                              (line  44)
* debug:                                 optimize.            (line   9)
* decf:                                  incf; decf.          (line   6)
* declaim:                               declaim.             (line   6)
* declaration <1>:                       declaration.         (line   6)
* declaration <2>:                       Minimal Declaration Processing Requirements.
                                                              (line   7)
* declaration:                           Declarations.        (line   6)
* declaration identifier:                Declaration Identifiers.
                                                              (line   6)
* declaration specifier:                 Declaration Specifiers.
                                                              (line   6)
* declare:                               declare.             (line   6)
* decode-float:                          decode-float; scale-float; float-radix; float-sign; float-digits; float+.
                                                              (line   6)
* decode-universal-time:                 decode-universal-time.
                                                              (line   6)
* decoded time:                          Time.                (line  30)
* default method:                        Introduction to Methods.
                                                              (line 101)
* defclass:                              defclass.            (line   6)
* defconstant:                           defconstant.         (line   6)
* defgeneric:                            defgeneric.          (line   6)
* define-compiler-macro:                 define-compiler-macro.
                                                              (line   6)
* define-condition:                      define-condition.    (line   6)
* define-method-combination:             define-method-combination.
                                                              (line   6)
* define-method-combination arguments lambda list: Define-method-combination Arguments Lambda Lists.
                                                              (line   6)
* define-modify-macro:                   define-modify-macro. (line   6)
* define-modify-macro lambda list:       Define-modify-macro Lambda Lists.
                                                              (line   6)
* define-setf-expander:                  define-setf-expander.
                                                              (line   6)
* define-symbol-macro:                   define-symbol-macro. (line   6)
* defmacro:                              defmacro.            (line   6)
* defmethod:                             defmethod.           (line   6)
* defpackage:                            defpackage.          (line   6)
* defparameter:                          defparameter; defvar.
                                                              (line   6)
* defsetf:                               defsetf.             (line   6)
* defsetf lambda list:                   Defsetf Lambda Lists.
                                                              (line   6)
* defstruct:                             defstruct.           (line   6)
* deftype:                               deftype.             (line   6)
* deftype lambda list:                   Deftype Lambda Lists.
                                                              (line   6)
* defun:                                 defun.               (line   6)
* defvar:                                defparameter; defvar.
                                                              (line   6)
* delete:                                remove; remove-if; remove-if-not; delete; delete-if; delete-if-not.
                                                              (line   6)
* delete-duplicates:                     remove-duplicates; delete-duplicates.
                                                              (line   6)
* delete-file:                           delete-file.         (line   6)
* delete-if:                             remove; remove-if; remove-if-not; delete; delete-if; delete-if-not.
                                                              (line   6)
* delete-if-not:                         remove; remove-if; remove-if-not; delete; delete-if; delete-if-not.
                                                              (line   6)
* delete-package:                        delete-package.      (line   6)
* denominator:                           numerator; denominator.
                                                              (line   6)
* deposit-field:                         deposit-field.       (line   6)
* derived type specifier:                Type Specifiers.     (line 110)
* describe:                              describe.            (line   6)
* describe-object:                       describe-object.     (line   6)
* designator:                            Notational Conventions.
                                                              (line 425)
* destructuring lambda list:             Destructuring Lambda Lists.
                                                              (line   6)
* destructuring-bind:                    destructuring-bind.  (line   6)
* digit-char <1>:                        Removed Argument Conventions.
                                                              (line   6)
* digit-char:                            digit-char.          (line   6)
* digit-char-p:                          digit-char-p.        (line   6)
* dimension:                             Array Elements.      (line  20)
* direct subclass:                       Introduction to Classes.
                                                              (line  26)
* direct superclass:                     Introduction to Classes.
                                                              (line  25)
* directory:                             directory.           (line   6)
* directory-namestring:                  namestring; file-namestring; directory-namestring; host-namestring; eno+.
                                                              (line   6)
* disassemble:                           disassemble.         (line   6)
* division-by-zero:                      division-by-zero.    (line   6)
* do:                                    do; do*.             (line   6)
* do*:                                   do; do*.             (line   6)
* do-all-symbols:                        do-symbols; do-external-symbols; do-all-symbols.
                                                              (line   6)
* do-external-symbols:                   do-symbols; do-external-symbols; do-all-symbols.
                                                              (line   6)
* do-symbols:                            do-symbols; do-external-symbols; do-all-symbols.
                                                              (line   6)
* documentation:                         documentation; setf documentation.
                                                              (line   6)
* dolist:                                dolist.              (line   6)
* Dollarsign (format directive):         FORMAT Floating-Point Printers.
                                                              (line 204)
* dot <1>:                               pprint-pop.          (line  28)
* dot:                                   Left-Parenthesis.    (line  21)
* Dot (sharpsign reader macro):          Sharpsign.           (line 209)
* Dot Dot <1>:                           *print-lines*.       (line  21)
* Dot Dot:                               Re-Reading Abbreviated Expressions.
                                                              (line   6)
* Dot Dot Dot <1>:                       pprint-pop.          (line  34)
* Dot Dot Dot:                           Re-Reading Abbreviated Expressions.
                                                              (line   6)
* dotimes:                               dotimes.             (line   6)
* dotted list <1>:                       list (System Class). (line  19)
* dotted list:                           Conses as Lists.     (line  16)
* double-float:                          short-float; single-float; double-float; long-float.
                                                              (line   6)
* double-float-epsilon:                  short-float-epsilon; short-float-negative-epsilon; single-float-epsilon+.
                                                              (line   6)
* double-float-negative-epsilon:         short-float-epsilon; short-float-negative-epsilon; single-float-epsilon+.
                                                              (line   6)
* Double-Quote (reader macro):           Double-Quote.        (line   6)
* dpb:                                   dpb.                 (line   6)
* dribble:                               dribble.             (line   6)
* dynamic environment:                   Introduction to Environments.
                                                              (line  37)
* dynamic-extent:                        dynamic-extent.      (line   6)
* E (format directive):                  FORMAT Floating-Point Printers.
                                                              (line  85)
* ecase:                                 case; ccase; ecase.  (line   6)
* echo-stream:                           echo-stream.         (line   6)
* echo-stream-input-stream:              echo-stream-input-stream; echo-stream-output-stream.
                                                              (line   6)
* echo-stream-output-stream:             echo-stream-input-stream; echo-stream-output-stream.
                                                              (line   6)
* ed:                                    ed.                  (line   6)
* effective method:                      Method Selection and Combination.
                                                              (line   7)
* eighth:                                first; second; third; fourth; fifth; sixth; seventh; eighth; ninth; ten+.
                                                              (line   6)
* elt:                                   elt.                 (line   6)
* empty list:                            list (System Class). (line  18)
* encode-universal-time:                 encode-universal-time.
                                                              (line   6)
* end-of-file:                           end-of-file.         (line   6)
* endp:                                  endp.                (line   6)
* enough-namestring:                     namestring; file-namestring; directory-namestring; host-namestring; eno+.
                                                              (line   6)
* ensure-directories-exist:              ensure-directories-exist.
                                                              (line   6)
* ensure-generic-function:               ensure-generic-function.
                                                              (line   6)
* environment:                           Introduction to Environments.
                                                              (line  10)
* environment object:                    Introduction to Environments.
                                                              (line 103)
* eq:                                    eq.                  (line   6)
* eql <1>:                               eql (Function).      (line   6)
* eql:                                   eql (Type Specifier).
                                                              (line   6)
* equal:                                 equal.               (line   6)
* Equal-Sign (sharpsign reader macro):   Sharpsign.           (line 399)
* equalp:                                equalp.              (line   6)
* error <1>:                             error (Function).    (line   6)
* error:                                 error (Condition Type).
                                                              (line   6)
* etypecase:                             typecase; ctypecase; etypecase.
                                                              (line   6)
* eval <1>:                              eval-when.           (line  15)
* eval <2>:                              eval.                (line   6)
* eval:                                  Sharpsign.           (line 209)
* eval-when <1>:                         eval-when.           (line   6)
* eval-when:                             File Compilation.    (line  67)
* evaluation:                            Evaluation.          (line  10)
* evaluation environment:                Compiler Terminology.
                                                              (line  60)
* evaluation order <1>:                  ldb.                 (line  39)
* evaluation order <2>:                  assert.              (line  46)
* evaluation order <3>:                  Defaulting of Initialization Arguments.
                                                              (line  53)
* evaluation order <4>:                  Variable Initialization and Stepping Clauses.
                                                              (line  81)
* evaluation order <5>:                  multiple-value-setq. (line  41)
* evaluation order <6>:                  catch.               (line  29)
* evaluation order <7>:                  Overview of Places and Generalized Reference.
                                                              (line  56)
* evaluation order:                      load-time-value.     (line  42)
* evenp:                                 evenp; oddp.         (line   6)
* every:                                 every; some; notevery; notany.
                                                              (line   6)
* exp:                                   exp; expt.           (line   6)
* export:                                export.              (line   6)
* expressed array element type:          Specialized Arrays.  (line  37)
* expt:                                  exp; expt.           (line   6)
* extended-char:                         extended-char.       (line   6)
* extensions:                            Error Terminology.   (line 124)
* external symbol:                       Introduction to Packages.
                                                              (line  56)
* externalizable object:                 Literal Objects in Compiled Files.
                                                              (line  35)
* F (format directive):                  FORMAT Floating-Point Printers.
                                                              (line   9)
* fboundp:                               fboundp.             (line   6)
* fceiling:                              floor; ffloor; ceiling; fceiling; truncate; ftruncate; round; fround.
                                                              (line   6)
* fdefinition:                           fdefinition.         (line   6)
* feature:                               Features.            (line   6)
* feature expression:                    Features.            (line  17)
* features list:                         Features.            (line  12)
* ffloor:                                floor; ffloor; ceiling; fceiling; truncate; ftruncate; round; fround.
                                                              (line   6)
* fifth:                                 first; second; third; fourth; fifth; sixth; seventh; eighth; ninth; ten+.
                                                              (line   6)
* file:                                  File System Concepts.
                                                              (line   7)
* file stream:                           Introduction to Streams.
                                                              (line 125)
* file-author:                           file-author.         (line   6)
* file-error:                            file-error.          (line   6)
* file-error-pathname:                   file-error-pathname. (line   6)
* file-length:                           file-length.         (line   6)
* file-namestring:                       namestring; file-namestring; directory-namestring; host-namestring; eno+.
                                                              (line   6)
* file-position:                         file-position.       (line   6)
* file-stream:                           file-stream.         (line   6)
* file-string-length:                    file-string-length.  (line   6)
* file-write-date:                       file-write-date.     (line   6)
* filename:                              File System Concepts.
                                                              (line   7)
* fill:                                  fill.                (line   6)
* fill pointer:                          Array Elements.      (line  53)
* fill-pointer:                          fill-pointer.        (line   6)
* fill-style conditional newline <1>:    pprint-newline.      (line  47)
* fill-style conditional newline:        Examples of using the Pretty Printer.
                                                              (line  84)
* find:                                  find; find-if; find-if-not.
                                                              (line   6)
* find-all-symbols:                      find-all-symbols.    (line   6)
* find-class:                            find-class.          (line   6)
* find-if:                               find; find-if; find-if-not.
                                                              (line   6)
* find-if-not:                           find; find-if; find-if-not.
                                                              (line   6)
* find-method:                           find-method.         (line   6)
* find-package:                          find-package.        (line   6)
* find-restart:                          find-restart.        (line   6)
* find-symbol:                           find-symbol.         (line   6)
* finish-output:                         finish-output; force-output; clear-output.
                                                              (line   6)
* first:                                 first; second; third; fourth; fifth; sixth; seventh; eighth; ninth; ten+.
                                                              (line   6)
* fixnum:                                fixnum.              (line   6)
* flet:                                  flet; labels; macrolet.
                                                              (line   6)
* float <1>:                             Default Print-Object Methods.
                                                              (line  43)
* float <2>:                             float (Function).    (line   6)
* float:                                 float (System Class).
                                                              (line   6)
* float-digits:                          decode-float; scale-float; float-radix; float-sign; float-digits; float+.
                                                              (line   6)
* float-precision:                       decode-float; scale-float; float-radix; float-sign; float-digits; float+.
                                                              (line   6)
* float-radix:                           decode-float; scale-float; float-radix; float-sign; float-digits; float+.
                                                              (line   6)
* float-sign:                            decode-float; scale-float; float-radix; float-sign; float-digits; float+.
                                                              (line   6)
* floating-point-inexact:                floating-point-inexact.
                                                              (line   6)
* floating-point-invalid-operation:      floating-point-invalid-operation.
                                                              (line   6)
* floating-point-overflow:               floating-point-overflow.
                                                              (line   6)
* floating-point-underflow:              floating-point-underflow.
                                                              (line   6)
* floatp:                                floatp.              (line   6)
* floor:                                 floor; ffloor; ceiling; fceiling; truncate; ftruncate; round; fround.
                                                              (line   6)
* fmakunbound:                           fmakunbound.         (line   6)
* force-output:                          finish-output; force-output; clear-output.
                                                              (line   6)
* format:                                format.              (line   6)
* format control:                        Pretty Printer Concepts.
                                                              (line 125)
* formatter:                             formatter.           (line   6)
* fourth:                                first; second; third; fourth; fifth; sixth; seventh; eighth; ninth; ten+.
                                                              (line   6)
* free declaration:                      Declaration Scope.   (line  15)
* fresh-line:                            terpri; fresh-line.  (line   6)
* fround:                                floor; ffloor; ceiling; fceiling; truncate; ftruncate; round; fround.
                                                              (line   6)
* ftruncate:                             floor; ffloor; ceiling; fceiling; truncate; ftruncate; round; fround.
                                                              (line   6)
* ftype:                                 ftype.               (line   6)
* funcall:                               funcall.             (line   6)
* function <1>:                          function (Special Operator).
                                                              (line   6)
* function <2>:                          function (System Class).
                                                              (line   6)
* function:                              Sharpsign.           (line 104)
* function-keywords:                     function-keywords.   (line   6)
* function-lambda-expression:            function-lambda-expression.
                                                              (line   6)
* functionp:                             functionp.           (line   6)
* further compilation:                   Compiler Terminology.
                                                              (line  38)
* G (format directive):                  FORMAT Floating-Point Printers.
                                                              (line 175)
* gcd:                                   gcd.                 (line   6)
* generalized reference:                 Overview of Places and Generalized Reference.
                                                              (line   6)
* generic function <1>:                  Introduction to Generic Functions.
                                                              (line   6)
* generic function:                      generic-function.    (line  14)
* generic function lambda list:          Generic Function Lambda Lists.
                                                              (line   6)
* generic-function:                      generic-function.    (line   6)
* gensym:                                gensym.              (line   6)
* gentemp:                               gentemp.             (line   6)
* get:                                   get.                 (line   6)
* get-decoded-time:                      get-universal-time; get-decoded-time.
                                                              (line   6)
* get-dispatch-macro-character:          set-dispatch-macro-character; get-dispatch-macro-character.
                                                              (line   6)
* get-internal-real-time:                get-internal-real-time.
                                                              (line   6)
* get-internal-run-time:                 get-internal-run-time.
                                                              (line   6)
* get-macro-character:                   set-macro-character; get-macro-character.
                                                              (line   6)
* get-output-stream-string:              get-output-stream-string.
                                                              (line   6)
* get-properties:                        get-properties.      (line   6)
* get-setf-expansion:                    get-setf-expansion.  (line   6)
* get-universal-time:                    get-universal-time; get-decoded-time.
                                                              (line   6)
* getf:                                  getf.                (line   6)
* gethash:                               gethash.             (line   6)
* global declaration:                    Declarations.        (line   9)
* global environment:                    Introduction to Environments.
                                                              (line  20)
* go:                                    go.                  (line   6)
* graphic:                               Character Categories.
                                                              (line  23)
* graphic-char-p:                        graphic-char-p.      (line   6)
* Greater-Than-Sign (format directive):  FORMAT Layout Control.
                                                              (line 115)
* handler-bind:                          handler-bind.        (line   6)
* handler-case:                          handler-case.        (line   6)
* hash-table:                            hash-table.          (line   6)
* hash-table-count:                      hash-table-count.    (line   6)
* hash-table-p:                          hash-table-p.        (line   6)
* hash-table-rehash-size:                hash-table-rehash-size.
                                                              (line   6)
* hash-table-rehash-threshold:           hash-table-rehash-threshold.
                                                              (line   6)
* hash-table-size:                       hash-table-size.     (line   6)
* hash-table-test:                       hash-table-test.     (line   6)
* host-namestring:                       namestring; file-namestring; directory-namestring; host-namestring; eno+.
                                                              (line   6)
* I (format directive):                  FORMAT Pretty Printer Operations.
                                                              (line  87)
* identity:                              identity.            (line   6)
* if:                                    if.                  (line   6)
* ignorable:                             ignore; ignorable.   (line   6)
* ignore:                                ignore; ignorable.   (line   6)
* ignore-errors:                         ignore-errors.       (line   6)
* imagpart:                              realpart; imagpart.  (line   6)
* implicit compilation:                  Compiler Terminology.
                                                              (line  17)
* import:                                import.              (line   6)
* improper list:                         Conses as Lists.     (line  13)
* in-package:                            in-package.          (line   6)
* incf:                                  incf; decf.          (line   6)
* initial readtable:                     Readtables.          (line  45)
* initialization argument list:          Object Creation and Initialization.
                                                              (line   8)
* initialize-instance:                   initialize-instance (Standard Generic Function).
                                                              (line   6)
* inline:                                inline; notinline.   (line   6)
* input:                                 Introduction to Streams.
                                                              (line  32)
* input-stream-p:                        input-stream-p; output-stream-p.
                                                              (line   6)
* inspect:                               inspect.             (line   6)
* instance:                              Introduction to Classes.
                                                              (line   7)
* int-char:                              Removed Operators.   (line   6)
* integer:                               integer.             (line   6)
* integer-decode-float:                  decode-float; scale-float; float-radix; float-sign; float-digits; float+.
                                                              (line   6)
* integer-length:                        integer-length.      (line   6)
* integerp:                              integerp.            (line   6)
* interactive stream:                    Introduction to Streams.
                                                              (line  92)
* interactive-stream-p:                  interactive-stream-p.
                                                              (line   6)
* intern:                                intern.              (line   6)
* internal symbol:                       Introduction to Packages.
                                                              (line  54)
* internal time:                         Time.                (line 100)
* internal-time-units-per-second:        internal-time-units-per-second.
                                                              (line   6)
* intersection:                          intersection; nintersection.
                                                              (line   6)
* invalid-method-error:                  invalid-method-error.
                                                              (line   6)
* invoke-debugger:                       invoke-debugger.     (line   6)
* invoke-restart:                        invoke-restart.      (line   6)
* invoke-restart-interactively:          invoke-restart-interactively.
                                                              (line   6)
* is signaled:                           Error Terminology.   (line  27)
* isqrt:                                 sqrt; isqrt.         (line   6)
* KEYWORD:                               Standardized Packages.
                                                              (line 165)
* keyword:                               keyword.             (line   6)
* keywordp:                              keywordp.            (line   6)
* labels:                                flet; labels; macrolet.
                                                              (line   6)
* lambda <1>:                            lambda (Macro).      (line   6)
* lambda:                                lambda (Symbol).     (line   6)
* lambda list:                           Lambda Lists.        (line   6)
* lambda-list-keywords:                  lambda-list-keywords.
                                                              (line   6)
* lambda-parameters-limit:               lambda-parameters-limit.
                                                              (line   6)
* last:                                  last.                (line   6)
* lcm:                                   lcm.                 (line   6)
* ldb:                                   ldb.                 (line   6)
* ldb-test:                              ldb-test.            (line   6)
* ldiff:                                 ldiff; tailp.        (line   6)
* least-negative-double-float:           most-positive-short-float; least-positive-short-float; least-positive-n+.
                                                              (line   6)
* least-negative-long-float:             most-positive-short-float; least-positive-short-float; least-positive-n+.
                                                              (line   6)
* least-negative-normalized-double-float: most-positive-short-float; least-positive-short-float; least-positive-n+.
                                                              (line   6)
* least-negative-normalized-long-float:  most-positive-short-float; least-positive-short-float; least-positive-n+.
                                                              (line   6)
* least-negative-normalized-short-float: most-positive-short-float; least-positive-short-float; least-positive-n+.
                                                              (line   6)
* least-negative-normalized-single-float: most-positive-short-float; least-positive-short-float; least-positive-n+.
                                                              (line   6)
* least-negative-short-float:            most-positive-short-float; least-positive-short-float; least-positive-n+.
                                                              (line   6)
* least-negative-single-float:           most-positive-short-float; least-positive-short-float; least-positive-n+.
                                                              (line   6)
* least-positive-double-float:           most-positive-short-float; least-positive-short-float; least-positive-n+.
                                                              (line   6)
* least-positive-long-float:             most-positive-short-float; least-positive-short-float; least-positive-n+.
                                                              (line   6)
* least-positive-normalized-double-float: most-positive-short-float; least-positive-short-float; least-positive-n+.
                                                              (line   6)
* least-positive-normalized-long-float:  most-positive-short-float; least-positive-short-float; least-positive-n+.
                                                              (line   6)
* least-positive-normalized-short-float: most-positive-short-float; least-positive-short-float; least-positive-n+.
                                                              (line   6)
* least-positive-normalized-single-float: most-positive-short-float; least-positive-short-float; least-positive-n+.
                                                              (line   6)
* least-positive-short-float:            most-positive-short-float; least-positive-short-float; least-positive-n+.
                                                              (line   6)
* least-positive-single-float:           most-positive-short-float; least-positive-short-float; least-positive-n+.
                                                              (line   6)
* leaves:                                Conses as Trees.     (line   9)
* Left-Brace (format directive):         FORMAT Control-Flow Operations.
                                                              (line  89)
* Left-Bracket (format directive):       FORMAT Control-Flow Operations.
                                                              (line  27)
* Left-Paren (format directive):         FORMAT Miscellaneous Operations.
                                                              (line   9)
* Left-Parenthesis (reader macro):       Left-Parenthesis.    (line   6)
* Left-Parenthesis (sharpsign reader macro): Sharpsign.       (line 114)
* length:                                length.              (line   6)
* Less-Than-Sign (format directive) <1>: FORMAT Layout Control.
                                                              (line  47)
* Less-Than-Sign (format directive):     FORMAT Pretty Printer Operations.
                                                              (line  19)
* Less-Than-Sign (sharpsign reader macro): Sharpsign.         (line 559)
* let:                                   let; let*.           (line   6)
* let*:                                  let; let*.           (line   6)
* lexical environment:                   Introduction to Environments.
                                                              (line  64)
* linear-style conditional newline <1>:  pprint-newline.      (line  29)
* linear-style conditional newline:      Examples of using the Pretty Printer.
                                                              (line  33)
* LISP:                                  Packages No Longer Required.
                                                              (line   6)
* lisp-implementation-type:              lisp-implementation-type; lisp-implementation-version.
                                                              (line   6)
* lisp-implementation-version:           lisp-implementation-type; lisp-implementation-version.
                                                              (line   6)
* list <1>:                              list; list*.         (line   6)
* list <2>:                              list (System Class). (line   6)
* list <3>:                              Conses as Lists.     (line   6)
* list <4>:                              Method Selection and Combination.
                                                              (line 239)
* list <5>:                              Comma.               (line   6)
* list <6>:                              Backquote.           (line   6)
* list:                                  Left-Parenthesis.    (line   6)
* list*:                                 list; list*.         (line   6)
* list-all-packages:                     list-all-packages.   (line   6)
* list-length:                           list-length.         (line   6)
* listen:                                listen.              (line   6)
* listp:                                 listp.               (line   6)
* literal object:                        Compiler Terminology.
                                                              (line  20)
* load <1>:                              load.                (line   6)
* load:                                  eval-when.           (line  15)
* load-logical-pathname-translations:    load-logical-pathname-translations.
                                                              (line   6)
* load-time-value <1>:                   load-time-value.     (line   6)
* load-time-value:                       Compilation Semantics.
                                                              (line 160)
* local declaration:                     Declarations.        (line   9)
* local precedence order <1>:            Determining the Class Precedence List.
                                                              (line   7)
* local precedence order:                Introduction to Classes.
                                                              (line  45)
* locally:                               locally.             (line   6)
* log:                                   log.                 (line   6)
* logand:                                logand; logandc1; logandc2; logeqv; logior; lognand; lognor; lognot; lo+.
                                                              (line   6)
* logandc1:                              logand; logandc1; logandc2; logeqv; logior; lognand; lognor; lognot; lo+.
                                                              (line   6)
* logandc2:                              logand; logandc1; logandc2; logeqv; logior; lognand; lognor; lognot; lo+.
                                                              (line   6)
* logbitp:                               logbitp.             (line   6)
* logcount:                              logcount.            (line   6)
* logeqv:                                logand; logandc1; logandc2; logeqv; logior; lognand; lognor; lognot; lo+.
                                                              (line   6)
* logical blocks:                        Pretty Printer Concepts.
                                                              (line  35)
* logical-pathname <1>:                  logical-pathname (Function).
                                                              (line   6)
* logical-pathname:                      logical-pathname (System Class).
                                                              (line   6)
* logical-pathname-translations:         logical-pathname-translations.
                                                              (line   6)
* logior:                                logand; logandc1; logandc2; logeqv; logior; lognand; lognor; lognot; lo+.
                                                              (line   6)
* lognand:                               logand; logandc1; logandc2; logeqv; logior; lognand; lognor; lognot; lo+.
                                                              (line   6)
* lognor:                                logand; logandc1; logandc2; logeqv; logior; lognand; lognor; lognot; lo+.
                                                              (line   6)
* lognot:                                logand; logandc1; logandc2; logeqv; logior; lognand; lognor; lognot; lo+.
                                                              (line   6)
* logorc1:                               logand; logandc1; logandc2; logeqv; logior; lognand; lognor; lognot; lo+.
                                                              (line   6)
* logorc2:                               logand; logandc1; logandc2; logeqv; logior; lognand; lognor; lognot; lo+.
                                                              (line   6)
* logtest:                               logtest.             (line   6)
* logxor:                                logand; logandc1; logandc2; logeqv; logior; lognand; lognor; lognot; lo+.
                                                              (line   6)
* long-float:                            short-float; single-float; double-float; long-float.
                                                              (line   6)
* long-float-epsilon:                    short-float-epsilon; short-float-negative-epsilon; single-float-epsilon+.
                                                              (line   6)
* long-float-negative-epsilon:           short-float-epsilon; short-float-negative-epsilon; single-float-epsilon+.
                                                              (line   6)
* long-site-name:                        short-site-name; long-site-name.
                                                              (line   6)
* loop:                                  loop.                (line   6)
* loop-finish:                           loop-finish.         (line   6)
* lower-case-p:                          upper-case-p; lower-case-p; both-case-p.
                                                              (line   6)
* machine-instance:                      machine-instance.    (line   6)
* machine-type:                          machine-type.        (line   6)
* machine-version:                       machine-version.     (line   6)
* macro:                                 Compilation Semantics.
                                                              (line 153)
* macro lambda list:                     Macro Lambda Lists.  (line   6)
* macro-function:                        macro-function.      (line   6)
* macroexpand:                           macroexpand; macroexpand-1.
                                                              (line   6)
* macroexpand-1:                         macroexpand; macroexpand-1.
                                                              (line   6)
* macrolet <1>:                          flet; labels; macrolet.
                                                              (line   6)
* macrolet:                              Compilation Semantics.
                                                              (line 155)
* make-array:                            make-array.          (line   6)
* make-broadcast-stream:                 make-broadcast-stream.
                                                              (line   6)
* make-char:                             Removed Operators.   (line   6)
* make-concatenated-stream:              make-concatenated-stream.
                                                              (line   6)
* make-condition:                        make-condition.      (line   6)
* make-dispatch-macro-character:         make-dispatch-macro-character.
                                                              (line   6)
* make-echo-stream:                      make-echo-stream.    (line   6)
* make-hash-table:                       make-hash-table.     (line   6)
* make-instance:                         make-instance.       (line   6)
* make-instances-obsolete:               make-instances-obsolete.
                                                              (line   6)
* make-list:                             make-list.           (line   6)
* make-load-form:                        make-load-form.      (line   6)
* make-load-form-saving-slots:           make-load-form-saving-slots.
                                                              (line   6)
* make-method:                           call-method; make-method.
                                                              (line   6)
* make-package:                          make-package.        (line   6)
* make-pathname:                         make-pathname.       (line   6)
* make-random-state:                     make-random-state.   (line   6)
* make-sequence:                         make-sequence.       (line   6)
* make-string:                           make-string.         (line   6)
* make-string-input-stream:              make-string-input-stream.
                                                              (line   6)
* make-string-output-stream:             make-string-output-stream.
                                                              (line   6)
* make-symbol:                           make-symbol.         (line   6)
* make-synonym-stream:                   make-synonym-stream. (line   6)
* make-two-way-stream:                   make-two-way-stream. (line   6)
* makunbound:                            makunbound.          (line   6)
* mandatory-style conditional newline:   pprint-newline.      (line  60)
* map:                                   map.                 (line   6)
* map-into:                              map-into.            (line   6)
* mapc:                                  mapc; mapcar; mapcan; mapl; maplist; mapcon.
                                                              (line   6)
* mapcan:                                mapc; mapcar; mapcan; mapl; maplist; mapcon.
                                                              (line   6)
* mapcar:                                mapc; mapcar; mapcan; mapl; maplist; mapcon.
                                                              (line   6)
* mapcon:                                mapc; mapcar; mapcan; mapl; maplist; mapcon.
                                                              (line   6)
* maphash:                               maphash.             (line   6)
* mapl:                                  mapc; mapcar; mapcan; mapl; maplist; mapcon.
                                                              (line   6)
* maplist:                               mapc; mapcar; mapcan; mapl; maplist; mapcon.
                                                              (line   6)
* mask-field:                            mask-field.          (line   6)
* max <1>:                               max; min.            (line   6)
* max:                                   Method Selection and Combination.
                                                              (line 239)
* member <1>:                            member; member-if; member-if-not.
                                                              (line   6)
* member:                                member (Type Specifier).
                                                              (line   6)
* member-if:                             member; member-if; member-if-not.
                                                              (line   6)
* member-if-not:                         member; member-if; member-if-not.
                                                              (line   6)
* merge:                                 merge.               (line   6)
* merge-pathnames:                       merge-pathnames.     (line   6)
* metaclass <1>:                         Introduction to Classes.
                                                              (line  73)
* metaclass:                             Introduction to Types and Classes.
                                                              (line  45)
* method:                                method.              (line   6)
* method-combination:                    method-combination.  (line   6)
* method-combination-error:              method-combination-error.
                                                              (line   6)
* method-defining operator:              Introduction to Generic Functions.
                                                              (line  59)
* method-qualifiers:                     method-qualifiers.   (line   6)
* might signal:                          Error Terminology.   (line 106)
* min <1>:                               max; min.            (line   6)
* min:                                   Method Selection and Combination.
                                                              (line 239)
* minimal compilation:                   Compiler Terminology.
                                                              (line  30)
* Minus (sharpsign reader macro):        Sharpsign.           (line 462)
* minusp:                                minusp; plusp.       (line   6)
* miser-style conditional newline <1>:   pprint-newline.      (line  36)
* miser-style conditional newline:       Examples of using the Pretty Printer.
                                                              (line  52)
* mismatch:                              mismatch.            (line   6)
* mod <1>:                               mod; rem.            (line   6)
* mod:                                   mod (Type Specifier).
                                                              (line   6)
* most-negative-double-float:            most-positive-short-float; least-positive-short-float; least-positive-n+.
                                                              (line   6)
* most-negative-fixnum:                  most-positive-fixnum; most-negative-fixnum.
                                                              (line   6)
* most-negative-long-float:              most-positive-short-float; least-positive-short-float; least-positive-n+.
                                                              (line   6)
* most-negative-short-float:             most-positive-short-float; least-positive-short-float; least-positive-n+.
                                                              (line   6)
* most-negative-single-float:            most-positive-short-float; least-positive-short-float; least-positive-n+.
                                                              (line   6)
* most-positive-double-float:            most-positive-short-float; least-positive-short-float; least-positive-n+.
                                                              (line   6)
* most-positive-fixnum:                  most-positive-fixnum; most-negative-fixnum.
                                                              (line   6)
* most-positive-long-float:              most-positive-short-float; least-positive-short-float; least-positive-n+.
                                                              (line   6)
* most-positive-short-float:             most-positive-short-float; least-positive-short-float; least-positive-n+.
                                                              (line   6)
* most-positive-single-float:            most-positive-short-float; least-positive-short-float; least-positive-n+.
                                                              (line   6)
* muffle-warning <1>:                    abort; continue; muffle-warning; store-value; use-value.
                                                              (line   6)
* muffle-warning:                        muffle-warning (Restart).
                                                              (line   6)
* multiple escape:                       Character Syntax Types.
                                                              (line 216)
* multiple-value-bind:                   multiple-value-bind. (line   6)
* multiple-value-call:                   multiple-value-call. (line   6)
* multiple-value-list:                   multiple-value-list. (line   6)
* multiple-value-prog1:                  multiple-value-prog1.
                                                              (line   6)
* multiple-value-setq:                   multiple-value-setq. (line   6)
* multiple-values-limit:                 multiple-values-limit.
                                                              (line   6)
* must signal:                           Error Terminology.   (line  27)
* name:                                  Notational Conventions.
                                                              (line  24)
* name-char:                             name-char.           (line   6)
* namespace:                             Introduction to Environments.
                                                              (line  13)
* namestring <1>:                        namestring; file-namestring; directory-namestring; host-namestring; eno+.
                                                              (line   6)
* namestring:                            Namestrings as Filenames.
                                                              (line   6)
* nbutlast:                              butlast; nbutlast.   (line   6)
* nconc <1>:                             nconc.               (line   6)
* nconc:                                 Method Selection and Combination.
                                                              (line 239)
* Newline (format directive):            FORMAT Miscellaneous Pseudo-Operations.
                                                              (line  82)
* next method:                           Method Selection and Combination.
                                                              (line  86)
* next-method-p:                         next-method-p.       (line   6)
* nil <1>:                               nil (Constant Variable).
                                                              (line   6)
* nil <2>:                               nil (Type).          (line   6)
* nil:                                   Notational Conventions.
                                                              (line 382)
* nintersection:                         intersection; nintersection.
                                                              (line   6)
* ninth:                                 first; second; third; fourth; fifth; sixth; seventh; eighth; ninth; ten+.
                                                              (line   6)
* no-applicable-method:                  no-applicable-method.
                                                              (line   6)
* no-next-method:                        no-next-method.      (line   6)
* non-graphic:                           Character Categories.
                                                              (line  34)
* non-terminating:                       Character Syntax Types.
                                                              (line 186)
* not <1>:                               not (Function).      (line   6)
* not:                                   not (Type Specifier).
                                                              (line   6)
* notany:                                every; some; notevery; notany.
                                                              (line   6)
* notevery:                              every; some; notevery; notany.
                                                              (line   6)
* notinline <1>:                         inline; notinline.   (line   6)
* notinline:                             Minimal Declaration Processing Requirements.
                                                              (line   7)
* nreconc:                               revappend; nreconc.  (line   6)
* nreverse:                              reverse; nreverse.   (line   6)
* nset-difference:                       set-difference; nset-difference.
                                                              (line   6)
* nset-exclusive-or:                     set-exclusive-or; nset-exclusive-or.
                                                              (line   6)
* nstring-capitalize:                    string-upcase; string-downcase; string-capitalize; nstring-upcase; nstr+.
                                                              (line   6)
* nstring-downcase:                      string-upcase; string-downcase; string-capitalize; nstring-upcase; nstr+.
                                                              (line   6)
* nstring-upcase:                        string-upcase; string-downcase; string-capitalize; nstring-upcase; nstr+.
                                                              (line   6)
* nsublis:                               sublis; nsublis.     (line   6)
* nsubst:                                subst; subst-if; subst-if-not; nsubst; nsubst-if; nsubst-if-not.
                                                              (line   6)
* nsubst-if:                             subst; subst-if; subst-if-not; nsubst; nsubst-if; nsubst-if-not.
                                                              (line   6)
* nsubst-if-not:                         subst; subst-if; subst-if-not; nsubst; nsubst-if; nsubst-if-not.
                                                              (line   6)
* nsubstitute:                           substitute; substitute-if; substitute-if-not; nsubstitute; nsubstitute-+.
                                                              (line   6)
* nsubstitute-if:                        substitute; substitute-if; substitute-if-not; nsubstitute; nsubstitute-+.
                                                              (line   6)
* nsubstitute-if-not:                    substitute; substitute-if; substitute-if-not; nsubstitute; nsubstitute-+.
                                                              (line   6)
* nth:                                   nth.                 (line   6)
* nth-value:                             nth-value.           (line   6)
* nthcdr:                                nthcdr.              (line   6)
* null <1>:                              null (Function).     (line   6)
* null <2>:                              null (System Class). (line   6)
* null:                                  Character Attributes.
                                                              (line  16)
* null lexical environment:              Introduction to Environments.
                                                              (line  93)
* number:                                number.              (line   6)
* numberp:                               numberp.             (line   6)
* numerator:                             numerator; denominator.
                                                              (line   6)
* nunion:                                union; nunion.       (line   6)
* O (format directive):                  FORMAT Radix Control.
                                                              (line  83)
* O (sharpsign reader macro):            Sharpsign.           (line 235)
* oddp:                                  evenp; oddp.         (line   6)
* open <1>:                              open.                (line   6)
* open:                                  Introduction to Streams.
                                                              (line  71)
* open-stream-p:                         open-stream-p.       (line   6)
* optimize:                              optimize.            (line   6)
* or <1>:                                Method Selection and Combination.
                                                              (line 239)
* or <2>:                                or (Macro).          (line   6)
* or:                                    or (Type Specifier). (line   6)
* order of evaluation <1>:               ldb.                 (line  39)
* order of evaluation <2>:               assert.              (line  46)
* order of evaluation <3>:               Defaulting of Initialization Arguments.
                                                              (line  53)
* order of evaluation <4>:               Variable Initialization and Stepping Clauses.
                                                              (line  81)
* order of evaluation <5>:               multiple-value-setq. (line  41)
* order of evaluation <6>:               catch.               (line  29)
* order of evaluation <7>:               Overview of Places and Generalized Reference.
                                                              (line  56)
* order of evaluation:                   load-time-value.     (line  42)
* ordinary lambda list:                  Ordinary Lambda Lists.
                                                              (line   6)
* otherwise <1>:                         typecase; ctypecase; etypecase.
                                                              (line  25)
* otherwise:                             case; ccase; ecase.  (line  25)
* output:                                Introduction to Streams.
                                                              (line  33)
* output-stream-p:                       input-stream-p; output-stream-p.
                                                              (line   6)
* P (format directive):                  FORMAT Miscellaneous Operations.
                                                              (line  50)
* P (sharpsign reader macro):            Sharpsign.           (line 388)
* package <1>:                           package.             (line   6)
* package:                               Introduction to Packages.
                                                              (line   6)
* package-error:                         package-error.       (line   6)
* package-error-package:                 package-error-package.
                                                              (line   6)
* package-name:                          package-name.        (line   6)
* package-nicknames:                     package-nicknames.   (line   6)
* package-shadowing-symbols:             package-shadowing-symbols.
                                                              (line   6)
* package-use-list:                      package-use-list.    (line   6)
* package-used-by-list:                  package-used-by-list.
                                                              (line   6)
* packagep:                              packagep.            (line   6)
* pairlis:                               pairlis.             (line   6)
* parse-error:                           parse-error.         (line   6)
* parse-integer:                         parse-integer.       (line   6)
* parse-namestring:                      parse-namestring.    (line   6)
* pathname <1>:                          pathname (Function). (line   6)
* pathname <2>:                          pathname (System Class).
                                                              (line   6)
* pathname <3>:                          Pathnames as Filenames.
                                                              (line   6)
* pathname:                              Sharpsign.           (line 388)
* pathname-device:                       pathname-host; pathname-device; pathname-directory; pathname-name; path+.
                                                              (line   6)
* pathname-directory:                    pathname-host; pathname-device; pathname-directory; pathname-name; path+.
                                                              (line   6)
* pathname-host:                         pathname-host; pathname-device; pathname-directory; pathname-name; path+.
                                                              (line   6)
* pathname-match-p:                      pathname-match-p.    (line   6)
* pathname-name:                         pathname-host; pathname-device; pathname-directory; pathname-name; path+.
                                                              (line   6)
* pathname-type:                         pathname-host; pathname-device; pathname-directory; pathname-name; path+.
                                                              (line   6)
* pathname-version:                      pathname-host; pathname-device; pathname-directory; pathname-name; path+.
                                                              (line   6)
* pathnamep:                             pathnamep.           (line   6)
* peek-char:                             peek-char.           (line   6)
* Percent (format directive):            FORMAT Basic Output. (line  52)
* phase:                                 phase.               (line   6)
* pi:                                    pi.                  (line   6)
* place:                                 Overview of Places and Generalized Reference.
                                                              (line   6)
* Plus (sharpsign reader macro):         Sharpsign.           (line 439)
* plusp:                                 minusp; plusp.       (line   6)
* pop:                                   pop.                 (line   6)
* position:                              position; position-if; position-if-not.
                                                              (line   6)
* position-if:                           position; position-if; position-if-not.
                                                              (line   6)
* position-if-not:                       position; position-if; position-if-not.
                                                              (line   6)
* pprint:                                write; prin1; print; pprint; princ.
                                                              (line   6)
* pprint dispatch table:                 Pretty Printer Concepts.
                                                              (line 131)
* pprint-dispatch:                       pprint-dispatch.     (line   6)
* pprint-exit-if-list-exhausted:         pprint-exit-if-list-exhausted.
                                                              (line   6)
* pprint-fill:                           pprint-fill; pprint-linear; pprint-tabular.
                                                              (line   6)
* pprint-indent:                         pprint-indent.       (line   6)
* pprint-linear:                         pprint-fill; pprint-linear; pprint-tabular.
                                                              (line   6)
* pprint-logical-block:                  pprint-logical-block.
                                                              (line   6)
* pprint-newline:                        pprint-newline.      (line   6)
* pprint-pop:                            pprint-pop.          (line   6)
* pprint-tab:                            pprint-tab.          (line   6)
* pprint-tabular:                        pprint-fill; pprint-linear; pprint-tabular.
                                                              (line   6)
* prepared to signal:                    Error Terminology.   (line  46)
* present <1>:                           Features.            (line  10)
* present:                               Introduction to Packages.
                                                              (line  73)
* pretty printer:                        Pretty Printer Concepts.
                                                              (line   6)
* prin1:                                 write; prin1; print; pprint; princ.
                                                              (line   6)
* prin1-to-string:                       write-to-string; prin1-to-string; princ-to-string.
                                                              (line   6)
* princ:                                 write; prin1; print; pprint; princ.
                                                              (line   6)
* princ-to-string:                       write-to-string; prin1-to-string; princ-to-string.
                                                              (line   6)
* print:                                 write; prin1; print; pprint; princ.
                                                              (line   6)
* print-not-readable:                    print-not-readable.  (line   6)
* print-not-readable-object:             print-not-readable-object.
                                                              (line   6)
* print-object:                          print-object.        (line   6)
* print-unreadable-object:               print-unreadable-object.
                                                              (line   6)
* printer control variable:              Overview of The Lisp Printer.
                                                              (line  41)
* printer escaping <1>:                  P.                   (line 186)
* printer escaping:                      Overview of The Lisp Printer.
                                                              (line  76)
* probe-file:                            probe-file.          (line   6)
* process:                               Compiler Terminology.
                                                              (line  34)
* proclaim:                              proclaim.            (line   6)
* proclamation:                          Declarations.        (line  10)
* prog:                                  prog; prog*.         (line   6)
* prog*:                                 prog; prog*.         (line   6)
* prog1:                                 prog1; prog2.        (line   6)
* prog2:                                 prog1; prog2.        (line   6)
* progn <1>:                             Method Selection and Combination.
                                                              (line 239)
* progn:                                 progn.               (line   6)
* program-error:                         program-error.       (line   6)
* progv:                                 progv.               (line   6)
* proper list <1>:                       list (System Class). (line  18)
* proper list:                           Conses as Lists.     (line  10)
* provide:                               provide; require.    (line   6)
* psetf:                                 setf; psetf.         (line   6)
* psetq:                                 psetq.               (line   6)
* push:                                  push.                (line   6)
* pushnew:                               pushnew.             (line   6)
* Question-Mark (format directive):      FORMAT Control-Flow Operations.
                                                              (line 168)
* quotation (of forms) <1>:              Comma.               (line   6)
* quotation (of forms) <2>:              Backquote.           (line   6)
* quotation (of forms):                  Single-Quote.        (line   6)
* quotation (of strings):                Double-Quote.        (line   6)
* quote <1>:                             quote.               (line   6)
* quote <2>:                             Comma.               (line   6)
* quote <3>:                             Backquote.           (line   6)
* quote:                                 Single-Quote.        (line   6)
* R (format directive):                  FORMAT Radix Control.
                                                              (line   9)
* R (sharpsign reader macro):            Sharpsign.           (line 261)
* random:                                random.              (line   6)
* random-state:                          random-state.        (line   6)
* random-state-p:                        random-state-p.      (line   6)
* rank:                                  Array Elements.      (line  39)
* rassoc:                                rassoc; rassoc-if; rassoc-if-not.
                                                              (line   6)
* rassoc-if:                             rassoc; rassoc-if; rassoc-if-not.
                                                              (line   6)
* rassoc-if-not:                         rassoc; rassoc-if; rassoc-if-not.
                                                              (line   6)
* ratio <1>:                             Default Print-Object Methods.
                                                              (line  29)
* ratio:                                 ratio.               (line   6)
* rational <1>:                          rational; rationalize.
                                                              (line   6)
* rational:                              rational (System Class).
                                                              (line   6)
* rationalize:                           rational; rationalize.
                                                              (line   6)
* rationalp:                             rationalp.           (line   6)
* read:                                  read; read-preserving-whitespace.
                                                              (line   6)
* read-byte:                             read-byte.           (line   6)
* read-char:                             read-char.           (line   6)
* read-char-no-hang:                     read-char-no-hang.   (line   6)
* read-delimited-list:                   read-delimited-list. (line   6)
* read-from-string:                      read-from-string.    (line   6)
* read-line:                             read-line.           (line   6)
* read-preserving-whitespace:            read; read-preserving-whitespace.
                                                              (line   6)
* read-sequence:                         read-sequence.       (line   6)
* reader macro function:                 Character Syntax Types.
                                                              (line 169)
* reader-error:                          reader-error.        (line   6)
* readtable <1>:                         readtable.           (line   6)
* readtable:                             Readtables.          (line   7)
* readtable-case:                        readtable-case.      (line   6)
* readtablep:                            readtablep.          (line   6)
* real:                                  real.                (line   6)
* realp:                                 realp.               (line   6)
* realpart:                              realpart; imagpart.  (line   6)
* redefinition:                          Standardized Packages.
                                                              (line  69)
* reduce:                                reduce.              (line   6)
* reinitialize-instance:                 reinitialize-instance.
                                                              (line   6)
* rem:                                   mod; rem.            (line   6)
* remf:                                  remf.                (line   6)
* remhash:                               remhash.             (line   6)
* remove:                                remove; remove-if; remove-if-not; delete; delete-if; delete-if-not.
                                                              (line   6)
* remove-duplicates:                     remove-duplicates; delete-duplicates.
                                                              (line   6)
* remove-if:                             remove; remove-if; remove-if-not; delete; delete-if; delete-if-not.
                                                              (line   6)
* remove-if-not:                         remove; remove-if; remove-if-not; delete; delete-if; delete-if-not.
                                                              (line   6)
* remove-method:                         remove-method.       (line   6)
* remprop:                               remprop.             (line   6)
* rename-file:                           rename-file.         (line   6)
* rename-package:                        rename-package.      (line   6)
* repertoire:                            Introduction to Scripts and Repertoires.
                                                              (line  30)
* replace:                               replace.             (line   6)
* report message:                        Printing Conditions. (line   9)
* require:                               provide; require.    (line   6)
* rest:                                  rest.                (line   6)
* restart:                               restart.             (line   6)
* restart-bind:                          restart-bind.        (line   6)
* restart-case:                          restart-case.        (line   6)
* restart-name:                          restart-name.        (line   6)
* return:                                return.              (line   6)
* return-from:                           return-from.         (line   6)
* revappend:                             revappend; nreconc.  (line   6)
* reverse:                               reverse; nreverse.   (line   6)
* Right-Brace (format directive):        FORMAT Control-Flow Operations.
                                                              (line 162)
* Right-Bracket (format directive):      FORMAT Control-Flow Operations.
                                                              (line  83)
* Right-Paren (format directive):        FORMAT Miscellaneous Operations.
                                                              (line  44)
* Right-Parenthesis (reader macro):      Right-Parenthesis.   (line   6)
* room:                                  room.                (line   6)
* rotatef:                               rotatef.             (line   6)
* round:                                 floor; ffloor; ceiling; fceiling; truncate; ftruncate; round; fround.
                                                              (line   6)
* row-major-aref:                        row-major-aref.      (line   6)
* rplaca:                                rplaca; rplacd.      (line   6)
* rplacd:                                rplaca; rplacd.      (line   6)
* run time:                              Compiler Terminology.
                                                              (line  84)
* run-time compiler:                     Compiler Terminology.
                                                              (line  91)
* run-time definition:                   Compiler Terminology.
                                                              (line  88)
* run-time environment:                  Compiler Terminology.
                                                              (line  65)
* S (format directive):                  FORMAT Printer Operations.
                                                              (line  33)
* S (sharpsign reader macro):            Sharpsign.           (line 361)
* safe:                                  Error Terminology.   (line  12)
* safe call:                             Argument Mismatch Detection.
                                                              (line   9)
* safety <1>:                            optimize.            (line   9)
* safety:                                Minimal Declaration Processing Requirements.
                                                              (line   7)
* satisfies:                             satisfies.           (line   6)
* satisfy the test <1>:                  Satisfying a One-Argument Test.
                                                              (line  31)
* satisfy the test:                      Satisfying a Two-Argument Test.
                                                              (line  37)
* sbit:                                  bit; sbit.           (line   6)
* scale-float:                           decode-float; scale-float; float-radix; float-sign; float-digits; float+.
                                                              (line   6)
* schar:                                 char; schar.         (line   6)
* search:                                search.              (line   6)
* second:                                first; second; third; fourth; fifth; sixth; seventh; eighth; ninth; ten+.
                                                              (line   6)
* sections:                              Pretty Printer Concepts.
                                                              (line  36)
* Semicolon (format directive):          FORMAT Miscellaneous Pseudo-Operations.
                                                              (line   9)
* Semicolon (reader macro):              Semicolon.           (line   6)
* sequence <1>:                          sequence.            (line   6)
* sequence:                              Sequence Concepts.   (line   6)
* sequence function:                     Sequence Concepts.   (line  13)
* serious-condition:                     serious-condition.   (line   6)
* set:                                   set.                 (line   6)
* set-char-bit:                          Removed Operators.   (line   7)
* set-difference:                        set-difference; nset-difference.
                                                              (line   6)
* set-dispatch-macro-character:          set-dispatch-macro-character; get-dispatch-macro-character.
                                                              (line   6)
* set-exclusive-or:                      set-exclusive-or; nset-exclusive-or.
                                                              (line   6)
* set-macro-character:                   set-macro-character; get-macro-character.
                                                              (line   6)
* set-pprint-dispatch:                   set-pprint-dispatch. (line   6)
* set-syntax-from-char:                  set-syntax-from-char.
                                                              (line   6)
* setf:                                  setf; psetf.         (line   6)
* setq:                                  setq.                (line   6)
* seventh:                               first; second; third; fourth; fifth; sixth; seventh; eighth; ninth; ten+.
                                                              (line   6)
* shadow <1>:                            shadow.              (line   6)
* shadow <2>:                            Introduction to Classes.
                                                              (line  39)
* shadow:                                Shadowing.           (line   8)
* shadowing symbol:                      Introduction to Packages.
                                                              (line 157)
* shadowing-import:                      shadowing-import.    (line   6)
* shared-initialize:                     shared-initialize (Standard Generic Function).
                                                              (line   6)
* Sharpsign (reader macro):              Sharpsign.           (line   6)
* Sharpsign (sharpsign reader macro):    Sharpsign.           (line 411)
* Sharpsign A (reader macro):            Sharpsign.           (line 323)
* Sharpsign Asterisk (reader macro):     Sharpsign.           (line 151)
* Sharpsign B (reader macro):            Sharpsign.           (line 224)
* Sharpsign Backslash (reader macro):    Sharpsign.           (line  78)
* Sharpsign C (reader macro):            Sharpsign.           (line 296)
* Sharpsign Colon (reader macro):        Sharpsign.           (line 196)
* Sharpsign Dot (reader macro):          Sharpsign.           (line 209)
* Sharpsign Equal-Sign (reader macro):   Sharpsign.           (line 399)
* Sharpsign Left-Parenthesis (reader macro): Sharpsign.       (line 114)
* Sharpsign Less-Than-Sign (reader macro): Sharpsign.         (line 559)
* Sharpsign Minus (reader macro):        Sharpsign.           (line 462)
* Sharpsign O (reader macro):            Sharpsign.           (line 235)
* Sharpsign P (reader macro):            Sharpsign.           (line 388)
* Sharpsign Plus (reader macro):         Sharpsign.           (line 439)
* Sharpsign R (reader macro):            Sharpsign.           (line 261)
* Sharpsign Right-Parenthesis <1>:       Re-Reading Abbreviated Expressions.
                                                              (line   6)
* Sharpsign Right-Parenthesis:           Sharpsign.           (line 574)
* Sharpsign S (reader macro):            Sharpsign.           (line 361)
* Sharpsign Sharpsign (reader macro) <1>: pprint-pop.         (line  39)
* Sharpsign Sharpsign (reader macro):    Sharpsign.           (line 411)
* Sharpsign Single-Quote (reader macro): Sharpsign.           (line 104)
* Sharpsign Vertical-Bar (reader macro): Sharpsign.           (line 473)
* Sharpsign Whitespace <1>:              Re-Reading Abbreviated Expressions.
                                                              (line   6)
* Sharpsign Whitespace:                  Sharpsign.           (line 567)
* Sharpsign X (reader macro):            Sharpsign.           (line 247)
* shiftf:                                shiftf.              (line   6)
* short-float:                           short-float; single-float; double-float; long-float.
                                                              (line   6)
* short-float-epsilon:                   short-float-epsilon; short-float-negative-epsilon; single-float-epsilon+.
                                                              (line   6)
* short-float-negative-epsilon:          short-float-epsilon; short-float-negative-epsilon; single-float-epsilon+.
                                                              (line   6)
* short-site-name:                       short-site-name; long-site-name.
                                                              (line   6)
* should signal:                         Error Terminology.   (line  37)
* signal <1>:                            signal.              (line   6)
* signal:                                Error Terminology.   (line  27)
* signed-byte:                           signed-byte.         (line   6)
* signum:                                signum.              (line   6)
* similar:                               Literal Objects in Compiled Files.
                                                              (line  37)
* simple-array:                          simple-array.        (line   6)
* simple-base-string:                    simple-base-string.  (line   6)
* simple-bit-vector <1>:                 simple-bit-vector.   (line   6)
* simple-bit-vector:                     Sharpsign.           (line 151)
* simple-bit-vector-p:                   simple-bit-vector-p. (line   6)
* simple-condition:                      simple-condition.    (line   6)
* simple-condition-format-arguments:     simple-condition-format-control; simple-condition-format-arguments.
                                                              (line   6)
* simple-condition-format-control:       simple-condition-format-control; simple-condition-format-arguments.
                                                              (line   6)
* simple-error:                          simple-error.        (line   6)
* simple-string:                         simple-string.       (line   6)
* simple-string-p:                       simple-string-p.     (line   6)
* simple-type-error:                     simple-type-error.   (line   6)
* simple-vector <1>:                     simple-vector.       (line   6)
* simple-vector:                         Sharpsign.           (line 114)
* simple-vector-p:                       simple-vector-p.     (line   6)
* simple-warning:                        simple-warning.      (line   6)
* sin:                                   sin; cos; tan.       (line   6)
* single escape:                         Character Syntax Types.
                                                              (line 238)
* single-float:                          short-float; single-float; double-float; long-float.
                                                              (line   6)
* single-float-epsilon:                  short-float-epsilon; short-float-negative-epsilon; single-float-epsilon+.
                                                              (line   6)
* single-float-negative-epsilon:         short-float-epsilon; short-float-negative-epsilon; single-float-epsilon+.
                                                              (line   6)
* Single-Quote (reader macro):           Single-Quote.        (line   6)
* Single-Quote (sharpsign reader macro): Sharpsign.           (line 104)
* sinh:                                  sinh; cosh; tanh; asinh; acosh; atanh.
                                                              (line   6)
* sixth:                                 first; second; third; fourth; fifth; sixth; seventh; eighth; ninth; ten+.
                                                              (line   6)
* Slash (format directive):              FORMAT Pretty Printer Operations.
                                                              (line  95)
* sleep:                                 sleep.               (line   6)
* slot specifier:                        Defining Classes.    (line  15)
* slot-boundp:                           slot-boundp.         (line   6)
* slot-exists-p:                         slot-exists-p.       (line   6)
* slot-makunbound:                       slot-makunbound.     (line   6)
* slot-missing:                          slot-missing.        (line   6)
* slot-unbound:                          slot-unbound.        (line   6)
* slot-value:                            slot-value.          (line   6)
* software-type:                         software-type; software-version.
                                                              (line   6)
* software-version:                      software-type; software-version.
                                                              (line   6)
* some:                                  every; some; notevery; notany.
                                                              (line   6)
* sort:                                  sort; stable-sort.   (line   6)
* source code:                           Loading.             (line   7)
* source file:                           Loading.             (line   9)
* space:                                 optimize.            (line   9)
* special <1>:                           special.             (line   6)
* special:                               Minimal Declaration Processing Requirements.
                                                              (line   7)
* special-operator-p:                    special-operator-p.  (line   6)
* specialized lambda list:               Specialized Lambda Lists.
                                                              (line   6)
* speed:                                 optimize.            (line   9)
* sqrt:                                  sqrt; isqrt.         (line   6)
* stable-sort:                           sort; stable-sort.   (line   6)
* standard:                              Method Selection and Combination.
                                                              (line 119)
* standard character:                    Standard Characters. (line   8)
* standard readtable:                    Readtables.          (line  34)
* standard syntax:                       Character Syntax.    (line  10)
* standard-char:                         standard-char.       (line   6)
* standard-char-p:                       standard-char-p.     (line   6)
* standard-class:                        standard-class.      (line   6)
* standard-generic-function:             standard-generic-function.
                                                              (line   6)
* standard-method:                       standard-method.     (line   6)
* standard-object:                       standard-object.     (line   6)
* startup environment:                   Compiler Terminology.
                                                              (line  48)
* step:                                  step.                (line   6)
* storage-condition:                     storage-condition.   (line   6)
* store-value <1>:                       abort; continue; muffle-warning; store-value; use-value.
                                                              (line   6)
* store-value:                           store-value (Restart).
                                                              (line   6)
* stream <1>:                            stream.              (line   6)
* stream <2>:                            Introduction to Streams.
                                                              (line   6)
* stream:                                File System Concepts.
                                                              (line   9)
* stream associated with a file:         Coercion of Streams to Pathnames.
                                                              (line   6)
* stream variable:                       Stream Variables.    (line   6)
* stream-element-type:                   stream-element-type. (line   6)
* stream-error:                          stream-error.        (line   6)
* stream-error-stream:                   stream-error-stream. (line   6)
* stream-external-format:                stream-external-format.
                                                              (line   6)
* streamp:                               streamp.             (line   6)
* string <1>:                            string (Function).   (line   6)
* string <2>:                            string (System Class).
                                                              (line   6)
* string <3>:                            Specialized Arrays.  (line  58)
* string:                                Double-Quote.        (line   6)
* string-capitalize:                     string-upcase; string-downcase; string-capitalize; nstring-upcase; nstr+.
                                                              (line   6)
* string-char:                           Removed Types.       (line   6)
* string-char-p:                         Removed Operators.   (line   7)
* string-downcase:                       string-upcase; string-downcase; string-capitalize; nstring-upcase; nstr+.
                                                              (line   6)
* string-equal:                          string=; string/=; string<; string>; string<=; string>=; string-equal; +.
                                                              (line   6)
* string-greaterp:                       string=; string/=; string<; string>; string<=; string>=; string-equal; +.
                                                              (line   6)
* string-left-trim:                      string-trim; string-left-trim; string-right-trim.
                                                              (line   6)
* string-lessp:                          string=; string/=; string<; string>; string<=; string>=; string-equal; +.
                                                              (line   6)
* string-not-equal:                      string=; string/=; string<; string>; string<=; string>=; string-equal; +.
                                                              (line   6)
* string-not-greaterp:                   string=; string/=; string<; string>; string<=; string>=; string-equal; +.
                                                              (line   6)
* string-not-lessp:                      string=; string/=; string<; string>; string<=; string>=; string-equal; +.
                                                              (line   6)
* string-right-trim:                     string-trim; string-left-trim; string-right-trim.
                                                              (line   6)
* string-stream:                         string-stream.       (line   6)
* string-trim:                           string-trim; string-left-trim; string-right-trim.
                                                              (line   6)
* string-upcase:                         string-upcase; string-downcase; string-capitalize; nstring-upcase; nstr+.
                                                              (line   6)
* string/=:                              string=; string/=; string<; string>; string<=; string>=; string-equal; +.
                                                              (line   6)
* string<:                               string=; string/=; string<; string>; string<=; string>=; string-equal; +.
                                                              (line   6)
* string<=:                              string=; string/=; string<; string>; string<=; string>=; string-equal; +.
                                                              (line   6)
* string=:                               string=; string/=; string<; string>; string<=; string>=; string-equal; +.
                                                              (line   6)
* string>:                               string=; string/=; string<; string>; string<=; string>=; string-equal; +.
                                                              (line   6)
* string>=:                              string=; string/=; string<; string>; string<=; string>=; string-equal; +.
                                                              (line   6)
* stringp:                               stringp.             (line   6)
* structure:                             Sharpsign.           (line 361)
* structure-class:                       structure-class.     (line   6)
* structure-object:                      structure-object.    (line   6)
* style-warning:                         style-warning.       (line   6)
* subclass:                              Introduction to Classes.
                                                              (line  29)
* sublis:                                sublis; nsublis.     (line   6)
* subseq:                                subseq.              (line   6)
* subsetp:                               subsetp.             (line   6)
* subst:                                 subst; subst-if; subst-if-not; nsubst; nsubst-if; nsubst-if-not.
                                                              (line   6)
* subst-if:                              subst; subst-if; subst-if-not; nsubst; nsubst-if; nsubst-if-not.
                                                              (line   6)
* subst-if-not:                          subst; subst-if; subst-if-not; nsubst; nsubst-if; nsubst-if-not.
                                                              (line   6)
* substitute:                            substitute; substitute-if; substitute-if-not; nsubstitute; nsubstitute-+.
                                                              (line   6)
* substitute-if:                         substitute; substitute-if; substitute-if-not; nsubstitute; nsubstitute-+.
                                                              (line   6)
* substitute-if-not:                     substitute; substitute-if; substitute-if-not; nsubstitute; nsubstitute-+.
                                                              (line   6)
* subtypep:                              subtypep.            (line   6)
* superclass:                            Introduction to Classes.
                                                              (line  27)
* svref:                                 svref.               (line   6)
* sxhash:                                sxhash.              (line   6)
* symbol <1>:                            symbol.              (line   6)
* symbol:                                Sharpsign.           (line 196)
* symbol macro:                          Compilation Semantics.
                                                              (line 153)
* symbol-function:                       symbol-function.     (line   6)
* symbol-macrolet <1>:                   symbol-macrolet.     (line   6)
* symbol-macrolet:                       Compilation Semantics.
                                                              (line 156)
* symbol-name:                           symbol-name.         (line   6)
* symbol-package:                        symbol-package.      (line   6)
* symbol-plist:                          symbol-plist.        (line   6)
* symbol-value:                          symbol-value.        (line   6)
* symbolp:                               symbolp.             (line   6)
* synonym-stream:                        synonym-stream.      (line   6)
* synonym-stream-symbol:                 synonym-stream-symbol.
                                                              (line   6)
* syntax type:                           Character Syntax Types.
                                                              (line  14)
* SYSTEM:                                Packages No Longer Required.
                                                              (line   6)
* t <1>:                                 typecase; ctypecase; etypecase.
                                                              (line  25)
* t <2>:                                 case; ccase; ecase.  (line  25)
* t <3>:                                 t (Constant Variable).
                                                              (line   6)
* t:                                     t (System Class).    (line   6)
* T (format directive):                  FORMAT Layout Control.
                                                              (line   9)
* tagbody:                               tagbody.             (line   6)
* tailp:                                 ldiff; tailp.        (line   6)
* tan:                                   sin; cos; tan.       (line   6)
* tanh:                                  sinh; cosh; tanh; asinh; acosh; atanh.
                                                              (line   6)
* tenth:                                 first; second; third; fourth; fifth; sixth; seventh; eighth; ninth; ten+.
                                                              (line   6)
* terminating:                           Character Syntax Types.
                                                              (line 190)
* terpri:                                terpri; fresh-line.  (line   6)
* the:                                   the.                 (line   6)
* third:                                 first; second; third; fourth; fifth; sixth; seventh; eighth; ninth; ten+.
                                                              (line   6)
* throw:                                 throw.               (line   6)
* Tilde (format directive):              FORMAT Basic Output. (line  72)
* Tilde A (format directive):            FORMAT Printer Operations.
                                                              (line   9)
* Tilde Ampersand (format directive):    FORMAT Basic Output. (line  59)
* Tilde Asterisk (format directive):     FORMAT Control-Flow Operations.
                                                              (line   9)
* Tilde B (format directive):            FORMAT Radix Control.
                                                              (line  73)
* Tilde C (format directive):            FORMAT Basic Output. (line   9)
* Tilde Circumflex (format directive):   FORMAT Miscellaneous Pseudo-Operations.
                                                              (line  15)
* Tilde D (format directive):            FORMAT Radix Control.
                                                              (line  44)
* Tilde Dollarsign (format directive):   FORMAT Floating-Point Printers.
                                                              (line 204)
* Tilde E (format directive):            FORMAT Floating-Point Printers.
                                                              (line  85)
* Tilde F (format directive):            FORMAT Floating-Point Printers.
                                                              (line   9)
* Tilde G (format directive):            FORMAT Floating-Point Printers.
                                                              (line 175)
* Tilde Greater-Than-Sign (format directive): FORMAT Layout Control.
                                                              (line 115)
* Tilde I (format directive):            FORMAT Pretty Printer Operations.
                                                              (line  87)
* Tilde Left-Brace (format directive):   FORMAT Control-Flow Operations.
                                                              (line  89)
* Tilde Left-Bracket (format directive): FORMAT Control-Flow Operations.
                                                              (line  27)
* Tilde Left-Paren (format directive):   FORMAT Miscellaneous Operations.
                                                              (line   9)
* Tilde Less-Than-Sign (format directive) <1>: FORMAT Layout Control.
                                                              (line  47)
* Tilde Less-Than-Sign (format directive): FORMAT Pretty Printer Operations.
                                                              (line  19)
* Tilde Newline (format directive):      FORMAT Miscellaneous Pseudo-Operations.
                                                              (line  82)
* Tilde O (format directive):            FORMAT Radix Control.
                                                              (line  83)
* Tilde P (format directive):            FORMAT Miscellaneous Operations.
                                                              (line  50)
* Tilde Percent (format directive):      FORMAT Basic Output. (line  52)
* Tilde Question-Mark (format directive): FORMAT Control-Flow Operations.
                                                              (line 168)
* Tilde R (format directive):            FORMAT Radix Control.
                                                              (line   9)
* Tilde Right-Brace (format directive):  FORMAT Control-Flow Operations.
                                                              (line 162)
* Tilde Right-Bracket (format directive): FORMAT Control-Flow Operations.
                                                              (line  83)
* Tilde Right-Paren (format directive):  FORMAT Miscellaneous Operations.
                                                              (line  44)
* Tilde S (format directive):            FORMAT Printer Operations.
                                                              (line  33)
* Tilde Semicolon (format directive):    FORMAT Miscellaneous Pseudo-Operations.
                                                              (line   9)
* Tilde Slash (format directive):        FORMAT Pretty Printer Operations.
                                                              (line  95)
* Tilde T (format directive):            FORMAT Layout Control.
                                                              (line   9)
* Tilde Tilde (format directive):        FORMAT Basic Output. (line  72)
* Tilde Underscore (format directive):   FORMAT Pretty Printer Operations.
                                                              (line  11)
* Tilde Vertical-Bar (format directive): FORMAT Basic Output. (line  66)
* Tilde W (format directive):            FORMAT Printer Operations.
                                                              (line  43)
* Tilde X (format directive):            FORMAT Radix Control.
                                                              (line  93)
* time:                                  time (Macro).        (line   6)
* token:                                 Character Syntax Types.
                                                              (line  77)
* trace:                                 trace; untrace.      (line   6)
* translate-logical-pathname:            translate-logical-pathname.
                                                              (line   6)
* translate-pathname:                    translate-pathname.  (line   6)
* tree:                                  Conses as Trees.     (line   6)
* tree-equal:                            tree-equal.          (line   6)
* truename <1>:                          truename.            (line   6)
* truename:                              Truenames.           (line  12)
* truncate:                              floor; ffloor; ceiling; fceiling; truncate; ftruncate; round; fround.
                                                              (line   6)
* two-way-stream:                        two-way-stream.      (line   6)
* two-way-stream-input-stream:           two-way-stream-input-stream; two-way-stream-output-stream.
                                                              (line   6)
* two-way-stream-output-stream:          two-way-stream-input-stream; two-way-stream-output-stream.
                                                              (line   6)
* type:                                  type.                (line   6)
* type-error:                            type-error.          (line   6)
* type-error-datum:                      type-error-datum; type-error-expected-type.
                                                              (line   6)
* type-error-expected-type:              type-error-datum; type-error-expected-type.
                                                              (line   6)
* type-of:                               type-of.             (line   6)
* typecase:                              typecase; ctypecase; etypecase.
                                                              (line   6)
* typep:                                 typep.               (line   6)
* unbound-slot:                          unbound-slot.        (line   6)
* unbound-slot-instance:                 unbound-slot-instance.
                                                              (line   6)
* unbound-variable:                      unbound-variable.    (line   6)
* undefined consequences:                Error Terminology.   (line  92)
* undefined-function:                    undefined-function.  (line   6)
* Underscore (format directive):         FORMAT Pretty Printer Operations.
                                                              (line  11)
* unexport:                              unexport.            (line   6)
* unintern:                              unintern.            (line   6)
* union:                                 union; nunion.       (line   6)
* universal time:                        Time.                (line  79)
* unless:                                when; unless.        (line   6)
* unread-char:                           unread-char.         (line   6)
* unsafe:                                Error Terminology.   (line  21)
* unsafe call:                           Argument Mismatch Detection.
                                                              (line  67)
* unsigned-byte:                         unsigned-byte.       (line   6)
* unspecified consequences:              Error Terminology.   (line  82)
* unspecified values:                    Error Terminology.   (line 111)
* untrace:                               trace; untrace.      (line   6)
* unuse-package:                         unuse-package.       (line   6)
* unwind-protect:                        unwind-protect.      (line   6)
* update-instance-for-different-class:   update-instance-for-different-class.
                                                              (line   6)
* update-instance-for-redefined-class:   update-instance-for-redefined-class.
                                                              (line   6)
* upgraded array element type:           Specialized Arrays.  (line  32)
* upgraded-array-element-type:           upgraded-array-element-type.
                                                              (line   6)
* upgraded-complex-part-type:            upgraded-complex-part-type.
                                                              (line   6)
* upper-case-p:                          upper-case-p; lower-case-p; both-case-p.
                                                              (line   6)
* use-package:                           use-package.         (line   6)
* use-value <1>:                         abort; continue; muffle-warning; store-value; use-value.
                                                              (line   6)
* use-value:                             use-value (Restart). (line   6)
* USER:                                  Packages No Longer Required.
                                                              (line   6)
* user-homedir-pathname:                 user-homedir-pathname.
                                                              (line   6)
* values <1>:                            values (Accessor).   (line   6)
* values:                                values (Type Specifier).
                                                              (line   6)
* values-list:                           values-list.         (line   6)
* vector <1>:                            vector (Function).   (line   6)
* vector <2>:                            vector (System Class).
                                                              (line   6)
* vector <3>:                            Array Elements.      (line  48)
* vector:                                Sharpsign.           (line 114)
* vector-pop:                            vector-pop.          (line   6)
* vector-push:                           vector-push; vector-push-extend.
                                                              (line   6)
* vector-push-extend:                    vector-push; vector-push-extend.
                                                              (line   6)
* vectorp:                               vectorp.             (line   6)
* Vertical-Bar (format directive):       FORMAT Basic Output. (line  66)
* Vertical-Bar (sharpsign reader macro): Sharpsign.           (line 473)
* W (format directive):                  FORMAT Printer Operations.
                                                              (line  43)
* warn:                                  warn.                (line   6)
* warning <1>:                           warning.             (line   6)
* warning:                               Error Terminology.   (line 150)
* when:                                  when; unless.        (line   6)
* wild-pathname-p:                       wild-pathname-p.     (line   6)
* with-accessors:                        with-accessors.      (line   6)
* with-compilation-unit:                 with-compilation-unit.
                                                              (line   6)
* with-condition-restarts:               with-condition-restarts.
                                                              (line   6)
* with-hash-table-iterator:              with-hash-table-iterator.
                                                              (line   6)
* with-input-from-string:                with-input-from-string.
                                                              (line   6)
* with-open-file:                        with-open-file.      (line   6)
* with-open-stream:                      with-open-stream.    (line   6)
* with-output-to-string:                 with-output-to-string.
                                                              (line   6)
* with-package-iterator:                 with-package-iterator.
                                                              (line   6)
* with-simple-restart:                   with-simple-restart. (line   6)
* with-slots:                            with-slots.          (line   6)
* with-standard-io-syntax:               with-standard-io-syntax.
                                                              (line   6)
* write:                                 write; prin1; print; pprint; princ.
                                                              (line   6)
* write-byte:                            write-byte.          (line   6)
* write-char:                            write-char.          (line   6)
* write-line:                            write-string; write-line.
                                                              (line   6)
* write-sequence:                        write-sequence.      (line   6)
* write-string:                          write-string; write-line.
                                                              (line   6)
* write-to-string:                       write-to-string; prin1-to-string; princ-to-string.
                                                              (line   6)
* X (format directive):                  FORMAT Radix Control.
                                                              (line  93)
* X (sharpsign reader macro):            Sharpsign.           (line 247)
* y-or-n-p:                              y-or-n-p; yes-or-no-p.
                                                              (line   6)
* yes-or-no-p:                           y-or-n-p; yes-or-no-p.
                                                              (line   6)
* zerop:                                 zerop.               (line   6)


File: ansicl,  Node: Symbol Index,  Next: List of Figures,  Prev: Index,  Up: Top

Symbol Index
************

 [index ]
* Menu:

* (setf class-name):                     setf class-name.       (line 6)
* (setf documentation):                  documentation; setf documentation.
                                                                (line 6)
* * <1>:                                 *; **; ***.            (line 6)
* *:                                     * (Function).          (line 6)
* **:                                    *; **; ***.            (line 6)
* ***:                                   *; **; ***.            (line 6)
* *break-on-signals*:                    *break-on-signals*.    (line 6)
* *compile-file-pathname*:               *compile-file-pathname*; *compile-file-truename*.
                                                                (line 6)
* *compile-file-truename*:               *compile-file-pathname*; *compile-file-truename*.
                                                                (line 6)
* *compile-print*:                       *compile-print*; *compile-verbose*.
                                                                (line 6)
* *compile-verbose*:                     *compile-print*; *compile-verbose*.
                                                                (line 6)
* *debug-io*:                            *debug-io*; *error-output*; *query-io*; *standard-input*; *standard-out+.
                                                                (line 6)
* *debugger-hook*:                       *debugger-hook*.       (line 6)
* *default-pathname-defaults*:           *default-pathname-defaults*.
                                                                (line 6)
* *error-output*:                        *debug-io*; *error-output*; *query-io*; *standard-input*; *standard-out+.
                                                                (line 6)
* *features*:                            *features*.            (line 6)
* *gensym-counter*:                      *gensym-counter*.      (line 6)
* *load-pathname*:                       *load-pathname*; *load-truename*.
                                                                (line 6)
* *load-print*:                          *load-print*; *load-verbose*.
                                                                (line 6)
* *load-truename*:                       *load-pathname*; *load-truename*.
                                                                (line 6)
* *load-verbose*:                        *load-print*; *load-verbose*.
                                                                (line 6)
* *macroexpand-hook*:                    *macroexpand-hook*.    (line 6)
* *modules*:                             *modules*.             (line 6)
* *package*:                             *package*.             (line 6)
* *print-array*:                         *print-array*.         (line 6)
* *print-base*:                          *print-base*; *print-radix*.
                                                                (line 6)
* *print-case*:                          *print-case*.          (line 6)
* *print-circle*:                        *print-circle*.        (line 6)
* *print-escape*:                        *print-escape*.        (line 6)
* *print-gensym*:                        *print-gensym*.        (line 6)
* *print-length*:                        *print-level*; *print-length*.
                                                                (line 6)
* *print-level*:                         *print-level*; *print-length*.
                                                                (line 6)
* *print-lines*:                         *print-lines*.         (line 6)
* *print-miser-width*:                   *print-miser-width*.   (line 6)
* *print-pprint-dispatch*:               *print-pprint-dispatch*.
                                                                (line 6)
* *print-pretty*:                        *print-pretty*.        (line 6)
* *print-radix*:                         *print-base*; *print-radix*.
                                                                (line 6)
* *print-readably*:                      *print-readably*.      (line 6)
* *print-right-margin*:                  *print-right-margin*.  (line 6)
* *query-io*:                            *debug-io*; *error-output*; *query-io*; *standard-input*; *standard-out+.
                                                                (line 6)
* *random-state*:                        *random-state*.        (line 6)
* *read-base*:                           *read-base*.           (line 6)
* *read-default-float-format*:           *read-default-float-format*.
                                                                (line 6)
* *read-eval*:                           *read-eval*.           (line 6)
* *read-suppress*:                       *read-suppress*.       (line 6)
* *readtable*:                           *readtable*.           (line 6)
* *standard-input*:                      *debug-io*; *error-output*; *query-io*; *standard-input*; *standard-out+.
                                                                (line 6)
* *standard-output*:                     *debug-io*; *error-output*; *query-io*; *standard-input*; *standard-out+.
                                                                (line 6)
* *terminal-io*:                         *terminal-io*.         (line 6)
* *trace-output*:                        *debug-io*; *error-output*; *query-io*; *standard-input*; *standard-out+.
                                                                (line 6)
* + <1>:                                 +; ++; +++.            (line 6)
* +:                                     + (Function).          (line 6)
* ++:                                    +; ++; +++.            (line 6)
* +++:                                   +; ++; +++.            (line 6)
* - <1>:                                 - (Variable).          (line 6)
* -:                                     - (Function).          (line 6)
* / <1>:                                 /; //; ///.            (line 6)
* /:                                     / (Function).          (line 6)
* //:                                    /; //; ///.            (line 6)
* ///:                                   /; //; ///.            (line 6)
* /=:                                    =; /=; <; >; <=; >=.   (line 6)
* 1+:                                    1+; 1-.                (line 6)
* 1-:                                    1+; 1-.                (line 6)
* <:                                     =; /=; <; >; <=; >=.   (line 6)
* <=:                                    =; /=; <; >; <=; >=.   (line 6)
* =:                                     =; /=; <; >; <=; >=.   (line 6)
* >:                                     =; /=; <; >; <=; >=.   (line 6)
* >=:                                    =; /=; <; >; <=; >=.   (line 6)
* abort <1>:                             abort; continue; muffle-warning; store-value; use-value.
                                                                (line 6)
* abort:                                 abort (Restart).       (line 6)
* abs:                                   abs.                   (line 6)
* acons:                                 acons.                 (line 6)
* acos:                                  asin; acos; atan.      (line 6)
* acosh:                                 sinh; cosh; tanh; asinh; acosh; atanh.
                                                                (line 6)
* add-method:                            add-method.            (line 6)
* adjoin:                                adjoin.                (line 6)
* adjust-array:                          adjust-array.          (line 6)
* adjustable-array-p:                    adjustable-array-p.    (line 6)
* allocate-instance:                     allocate-instance.     (line 6)
* alpha-char-p:                          alpha-char-p.          (line 6)
* alphanumericp:                         alphanumericp.         (line 6)
* and <1>:                               and (Macro).           (line 6)
* and:                                   and (Type Specifier).  (line 6)
* append:                                append.                (line 6)
* apply:                                 apply.                 (line 6)
* apropos:                               apropos; apropos-list. (line 6)
* apropos-list:                          apropos; apropos-list. (line 6)
* aref:                                  aref.                  (line 6)
* arithmetic-error:                      arithmetic-error.      (line 6)
* arithmetic-error-operands:             arithmetic-error-operands; arithmetic-error-operation.
                                                                (line 6)
* arithmetic-error-operation:            arithmetic-error-operands; arithmetic-error-operation.
                                                                (line 6)
* array:                                 array.                 (line 6)
* array-dimension:                       array-dimension.       (line 6)
* array-dimension-limit:                 array-dimension-limit. (line 6)
* array-dimensions:                      array-dimensions.      (line 6)
* array-displacement:                    array-displacement.    (line 6)
* array-element-type:                    array-element-type.    (line 6)
* array-has-fill-pointer-p:              array-has-fill-pointer-p.
                                                                (line 6)
* array-in-bounds-p:                     array-in-bounds-p.     (line 6)
* array-rank:                            array-rank.            (line 6)
* array-rank-limit:                      array-rank-limit.      (line 6)
* array-row-major-index:                 array-row-major-index. (line 6)
* array-total-size:                      array-total-size.      (line 6)
* array-total-size-limit:                array-total-size-limit.
                                                                (line 6)
* arrayp:                                arrayp.                (line 6)
* ash:                                   ash.                   (line 6)
* asin:                                  asin; acos; atan.      (line 6)
* asinh:                                 sinh; cosh; tanh; asinh; acosh; atanh.
                                                                (line 6)
* assert:                                assert.                (line 6)
* assoc:                                 assoc; assoc-if; assoc-if-not.
                                                                (line 6)
* assoc-if:                              assoc; assoc-if; assoc-if-not.
                                                                (line 6)
* assoc-if-not:                          assoc; assoc-if; assoc-if-not.
                                                                (line 6)
* atan:                                  asin; acos; atan.      (line 6)
* atanh:                                 sinh; cosh; tanh; asinh; acosh; atanh.
                                                                (line 6)
* atom <1>:                              atom (Function).       (line 6)
* atom:                                  atom (Type).           (line 6)
* base-char:                             base-char.             (line 6)
* base-string:                           base-string.           (line 6)
* bignum:                                bignum.                (line 6)
* bit <1>:                               bit; sbit.             (line 6)
* bit:                                   bit (Type).            (line 6)
* bit-and:                               bit-and; bit-andc1; bit-andc2; bit-eqv; bit-ior; bit-nand; bit-nor; bit+.
                                                                (line 6)
* bit-andc1:                             bit-and; bit-andc1; bit-andc2; bit-eqv; bit-ior; bit-nand; bit-nor; bit+.
                                                                (line 6)
* bit-andc2:                             bit-and; bit-andc1; bit-andc2; bit-eqv; bit-ior; bit-nand; bit-nor; bit+.
                                                                (line 6)
* bit-eqv:                               bit-and; bit-andc1; bit-andc2; bit-eqv; bit-ior; bit-nand; bit-nor; bit+.
                                                                (line 6)
* bit-ior:                               bit-and; bit-andc1; bit-andc2; bit-eqv; bit-ior; bit-nand; bit-nor; bit+.
                                                                (line 6)
* bit-nand:                              bit-and; bit-andc1; bit-andc2; bit-eqv; bit-ior; bit-nand; bit-nor; bit+.
                                                                (line 6)
* bit-nor:                               bit-and; bit-andc1; bit-andc2; bit-eqv; bit-ior; bit-nand; bit-nor; bit+.
                                                                (line 6)
* bit-not:                               bit-and; bit-andc1; bit-andc2; bit-eqv; bit-ior; bit-nand; bit-nor; bit+.
                                                                (line 6)
* bit-orc1:                              bit-and; bit-andc1; bit-andc2; bit-eqv; bit-ior; bit-nand; bit-nor; bit+.
                                                                (line 6)
* bit-orc2:                              bit-and; bit-andc1; bit-andc2; bit-eqv; bit-ior; bit-nand; bit-nor; bit+.
                                                                (line 6)
* bit-vector:                            bit-vector.            (line 6)
* bit-vector-p:                          bit-vector-p.          (line 6)
* bit-xor:                               bit-and; bit-andc1; bit-andc2; bit-eqv; bit-ior; bit-nand; bit-nor; bit+.
                                                                (line 6)
* block:                                 block.                 (line 6)
* boole:                                 boole.                 (line 6)
* boole-1:                               boole-1; boole-2; boole-and; boole-andc1; boole-andc2; boole-c1; boole-+.
                                                                (line 6)
* boole-2:                               boole-1; boole-2; boole-and; boole-andc1; boole-andc2; boole-c1; boole-+.
                                                                (line 6)
* boole-and:                             boole-1; boole-2; boole-and; boole-andc1; boole-andc2; boole-c1; boole-+.
                                                                (line 6)
* boole-andc1:                           boole-1; boole-2; boole-and; boole-andc1; boole-andc2; boole-c1; boole-+.
                                                                (line 6)
* boole-andc2:                           boole-1; boole-2; boole-and; boole-andc1; boole-andc2; boole-c1; boole-+.
                                                                (line 6)
* boole-c1:                              boole-1; boole-2; boole-and; boole-andc1; boole-andc2; boole-c1; boole-+.
                                                                (line 6)
* boole-c2:                              boole-1; boole-2; boole-and; boole-andc1; boole-andc2; boole-c1; boole-+.
                                                                (line 6)
* boole-clr:                             boole-1; boole-2; boole-and; boole-andc1; boole-andc2; boole-c1; boole-+.
                                                                (line 6)
* boole-eqv:                             boole-1; boole-2; boole-and; boole-andc1; boole-andc2; boole-c1; boole-+.
                                                                (line 6)
* boole-ior:                             boole-1; boole-2; boole-and; boole-andc1; boole-andc2; boole-c1; boole-+.
                                                                (line 6)
* boole-nand:                            boole-1; boole-2; boole-and; boole-andc1; boole-andc2; boole-c1; boole-+.
                                                                (line 6)
* boole-nor:                             boole-1; boole-2; boole-and; boole-andc1; boole-andc2; boole-c1; boole-+.
                                                                (line 6)
* boole-orc1:                            boole-1; boole-2; boole-and; boole-andc1; boole-andc2; boole-c1; boole-+.
                                                                (line 6)
* boole-orc2:                            boole-1; boole-2; boole-and; boole-andc1; boole-andc2; boole-c1; boole-+.
                                                                (line 6)
* boole-set:                             boole-1; boole-2; boole-and; boole-andc1; boole-andc2; boole-c1; boole-+.
                                                                (line 6)
* boole-xor:                             boole-1; boole-2; boole-and; boole-andc1; boole-andc2; boole-c1; boole-+.
                                                                (line 6)
* boolean:                               boolean.               (line 6)
* both-case-p:                           upper-case-p; lower-case-p; both-case-p.
                                                                (line 6)
* boundp:                                boundp.                (line 6)
* break:                                 break.                 (line 6)
* broadcast-stream:                      broadcast-stream.      (line 6)
* broadcast-stream-streams:              broadcast-stream-streams.
                                                                (line 6)
* built-in-class:                        built-in-class.        (line 6)
* butlast:                               butlast; nbutlast.     (line 6)
* byte:                                  byte; byte-size; byte-position.
                                                                (line 6)
* byte-position:                         byte; byte-size; byte-position.
                                                                (line 6)
* byte-size:                             byte; byte-size; byte-position.
                                                                (line 6)
* caaaar:                                car; cdr; caar; cadr; cdar; cddr; caaar; caadr; cadar; caddr; cdaar; cd+.
                                                                (line 6)
* caaadr:                                car; cdr; caar; cadr; cdar; cddr; caaar; caadr; cadar; caddr; cdaar; cd+.
                                                                (line 6)
* caaar:                                 car; cdr; caar; cadr; cdar; cddr; caaar; caadr; cadar; caddr; cdaar; cd+.
                                                                (line 6)
* caadar:                                car; cdr; caar; cadr; cdar; cddr; caaar; caadr; cadar; caddr; cdaar; cd+.
                                                                (line 6)
* caaddr:                                car; cdr; caar; cadr; cdar; cddr; caaar; caadr; cadar; caddr; cdaar; cd+.
                                                                (line 6)
* caadr:                                 car; cdr; caar; cadr; cdar; cddr; caaar; caadr; cadar; caddr; cdaar; cd+.
                                                                (line 6)
* caar:                                  car; cdr; caar; cadr; cdar; cddr; caaar; caadr; cadar; caddr; cdaar; cd+.
                                                                (line 6)
* cadaar:                                car; cdr; caar; cadr; cdar; cddr; caaar; caadr; cadar; caddr; cdaar; cd+.
                                                                (line 6)
* cadadr:                                car; cdr; caar; cadr; cdar; cddr; caaar; caadr; cadar; caddr; cdaar; cd+.
                                                                (line 6)
* cadar:                                 car; cdr; caar; cadr; cdar; cddr; caaar; caadr; cadar; caddr; cdaar; cd+.
                                                                (line 6)
* caddar:                                car; cdr; caar; cadr; cdar; cddr; caaar; caadr; cadar; caddr; cdaar; cd+.
                                                                (line 6)
* cadddr:                                car; cdr; caar; cadr; cdar; cddr; caaar; caadr; cadar; caddr; cdaar; cd+.
                                                                (line 6)
* caddr:                                 car; cdr; caar; cadr; cdar; cddr; caaar; caadr; cadar; caddr; cdaar; cd+.
                                                                (line 6)
* cadr:                                  car; cdr; caar; cadr; cdar; cddr; caaar; caadr; cadar; caddr; cdaar; cd+.
                                                                (line 6)
* call-arguments-limit:                  call-arguments-limit.  (line 6)
* call-method:                           call-method; make-method.
                                                                (line 6)
* call-next-method:                      call-next-method.      (line 6)
* car:                                   car; cdr; caar; cadr; cdar; cddr; caaar; caadr; cadar; caddr; cdaar; cd+.
                                                                (line 6)
* case:                                  case; ccase; ecase.    (line 6)
* catch:                                 catch.                 (line 6)
* ccase:                                 case; ccase; ecase.    (line 6)
* cdaaar:                                car; cdr; caar; cadr; cdar; cddr; caaar; caadr; cadar; caddr; cdaar; cd+.
                                                                (line 6)
* cdaadr:                                car; cdr; caar; cadr; cdar; cddr; caaar; caadr; cadar; caddr; cdaar; cd+.
                                                                (line 6)
* cdaar:                                 car; cdr; caar; cadr; cdar; cddr; caaar; caadr; cadar; caddr; cdaar; cd+.
                                                                (line 6)
* cdadar:                                car; cdr; caar; cadr; cdar; cddr; caaar; caadr; cadar; caddr; cdaar; cd+.
                                                                (line 6)
* cdaddr:                                car; cdr; caar; cadr; cdar; cddr; caaar; caadr; cadar; caddr; cdaar; cd+.
                                                                (line 6)
* cdadr:                                 car; cdr; caar; cadr; cdar; cddr; caaar; caadr; cadar; caddr; cdaar; cd+.
                                                                (line 6)
* cdar:                                  car; cdr; caar; cadr; cdar; cddr; caaar; caadr; cadar; caddr; cdaar; cd+.
                                                                (line 6)
* cddaar:                                car; cdr; caar; cadr; cdar; cddr; caaar; caadr; cadar; caddr; cdaar; cd+.
                                                                (line 6)
* cddadr:                                car; cdr; caar; cadr; cdar; cddr; caaar; caadr; cadar; caddr; cdaar; cd+.
                                                                (line 6)
* cddar:                                 car; cdr; caar; cadr; cdar; cddr; caaar; caadr; cadar; caddr; cdaar; cd+.
                                                                (line 6)
* cdddar:                                car; cdr; caar; cadr; cdar; cddr; caaar; caadr; cadar; caddr; cdaar; cd+.
                                                                (line 6)
* cddddr:                                car; cdr; caar; cadr; cdar; cddr; caaar; caadr; cadar; caddr; cdaar; cd+.
                                                                (line 6)
* cdddr:                                 car; cdr; caar; cadr; cdar; cddr; caaar; caadr; cadar; caddr; cdaar; cd+.
                                                                (line 6)
* cddr:                                  car; cdr; caar; cadr; cdar; cddr; caaar; caadr; cadar; caddr; cdaar; cd+.
                                                                (line 6)
* cdr:                                   car; cdr; caar; cadr; cdar; cddr; caaar; caadr; cadar; caddr; cdaar; cd+.
                                                                (line 6)
* ceiling:                               floor; ffloor; ceiling; fceiling; truncate; ftruncate; round; fround.
                                                                (line 6)
* cell-error:                            cell-error.            (line 6)
* cell-error-name:                       cell-error-name.       (line 6)
* cerror:                                cerror.                (line 6)
* change-class:                          change-class.          (line 6)
* char:                                  char; schar.           (line 6)
* char-code:                             char-code.             (line 6)
* char-code-limit:                       char-code-limit.       (line 6)
* char-downcase:                         char-upcase; char-downcase.
                                                                (line 6)
* char-equal:                            char=; char/=; char<; char>; char<=; char>=; char-equal; char-not-equal+.
                                                                (line 6)
* char-greaterp:                         char=; char/=; char<; char>; char<=; char>=; char-equal; char-not-equal+.
                                                                (line 6)
* char-int:                              char-int.              (line 6)
* char-lessp:                            char=; char/=; char<; char>; char<=; char>=; char-equal; char-not-equal+.
                                                                (line 6)
* char-name:                             char-name.             (line 6)
* char-not-equal:                        char=; char/=; char<; char>; char<=; char>=; char-equal; char-not-equal+.
                                                                (line 6)
* char-not-greaterp:                     char=; char/=; char<; char>; char<=; char>=; char-equal; char-not-equal+.
                                                                (line 6)
* char-not-lessp:                        char=; char/=; char<; char>; char<=; char>=; char-equal; char-not-equal+.
                                                                (line 6)
* char-upcase:                           char-upcase; char-downcase.
                                                                (line 6)
* char/=:                                char=; char/=; char<; char>; char<=; char>=; char-equal; char-not-equal+.
                                                                (line 6)
* char<:                                 char=; char/=; char<; char>; char<=; char>=; char-equal; char-not-equal+.
                                                                (line 6)
* char<=:                                char=; char/=; char<; char>; char<=; char>=; char-equal; char-not-equal+.
                                                                (line 6)
* char=:                                 char=; char/=; char<; char>; char<=; char>=; char-equal; char-not-equal+.
                                                                (line 6)
* char>:                                 char=; char/=; char<; char>; char<=; char>=; char-equal; char-not-equal+.
                                                                (line 6)
* char>=:                                char=; char/=; char<; char>; char<=; char>=; char-equal; char-not-equal+.
                                                                (line 6)
* character <1>:                         character (Function).  (line 6)
* character:                             character (System Class).
                                                                (line 6)
* characterp:                            characterp.            (line 6)
* check-type:                            check-type.            (line 6)
* cis:                                   cis.                   (line 6)
* class:                                 class.                 (line 6)
* class-name:                            class-name.            (line 6)
* class-of:                              class-of.              (line 6)
* clear-input:                           clear-input.           (line 6)
* clear-output:                          finish-output; force-output; clear-output.
                                                                (line 6)
* close:                                 close.                 (line 6)
* clrhash:                               clrhash.               (line 6)
* code-char:                             code-char.             (line 6)
* coerce:                                coerce.                (line 6)
* compile:                               compile.               (line 6)
* compile-file:                          compile-file.          (line 6)
* compile-file-pathname:                 compile-file-pathname. (line 6)
* compiled-function:                     compiled-function.     (line 6)
* compiled-function-p:                   compiled-function-p.   (line 6)
* compiler-macro-function:               compiler-macro-function.
                                                                (line 6)
* complement:                            complement.            (line 6)
* complex <1>:                           complex (Function).    (line 6)
* complex:                               complex (System Class).
                                                                (line 6)
* complexp:                              complexp.              (line 6)
* compute-applicable-methods:            compute-applicable-methods.
                                                                (line 6)
* compute-restarts:                      compute-restarts.      (line 6)
* concatenate:                           concatenate.           (line 6)
* concatenated-stream:                   concatenated-stream.   (line 6)
* concatenated-stream-streams:           concatenated-stream-streams.
                                                                (line 6)
* cond:                                  cond.                  (line 6)
* condition:                             condition.             (line 6)
* conjugate:                             conjugate.             (line 6)
* cons <1>:                              cons (Function).       (line 6)
* cons:                                  cons (System Class).   (line 6)
* consp:                                 consp.                 (line 6)
* constantly:                            constantly.            (line 6)
* constantp:                             constantp.             (line 6)
* continue <1>:                          abort; continue; muffle-warning; store-value; use-value.
                                                                (line 6)
* continue:                              continue (Restart).    (line 6)
* control-error:                         control-error.         (line 6)
* copy-alist:                            copy-alist.            (line 6)
* copy-list:                             copy-list.             (line 6)
* copy-pprint-dispatch:                  copy-pprint-dispatch.  (line 6)
* copy-readtable:                        copy-readtable.        (line 6)
* copy-seq:                              copy-seq.              (line 6)
* copy-structure:                        copy-structure.        (line 6)
* copy-symbol:                           copy-symbol.           (line 6)
* copy-tree:                             copy-tree.             (line 6)
* cos:                                   sin; cos; tan.         (line 6)
* cosh:                                  sinh; cosh; tanh; asinh; acosh; atanh.
                                                                (line 6)
* count:                                 count; count-if; count-if-not.
                                                                (line 6)
* count-if:                              count; count-if; count-if-not.
                                                                (line 6)
* count-if-not:                          count; count-if; count-if-not.
                                                                (line 6)
* ctypecase:                             typecase; ctypecase; etypecase.
                                                                (line 6)
* decf:                                  incf; decf.            (line 6)
* declaim:                               declaim.               (line 6)
* declaration:                           declaration.           (line 6)
* declare:                               declare.               (line 6)
* decode-float:                          decode-float; scale-float; float-radix; float-sign; float-digits; float+.
                                                                (line 6)
* decode-universal-time:                 decode-universal-time. (line 6)
* defclass:                              defclass.              (line 6)
* defconstant:                           defconstant.           (line 6)
* defgeneric:                            defgeneric.            (line 6)
* define-compiler-macro:                 define-compiler-macro. (line 6)
* define-condition:                      define-condition.      (line 6)
* define-method-combination:             define-method-combination.
                                                                (line 6)
* define-modify-macro:                   define-modify-macro.   (line 6)
* define-setf-expander:                  define-setf-expander.  (line 6)
* define-symbol-macro:                   define-symbol-macro.   (line 6)
* defmacro:                              defmacro.              (line 6)
* defmethod:                             defmethod.             (line 6)
* defpackage:                            defpackage.            (line 6)
* defparameter:                          defparameter; defvar.  (line 6)
* defsetf:                               defsetf.               (line 6)
* defstruct:                             defstruct.             (line 6)
* deftype:                               deftype.               (line 6)
* defun:                                 defun.                 (line 6)
* defvar:                                defparameter; defvar.  (line 6)
* delete:                                remove; remove-if; remove-if-not; delete; delete-if; delete-if-not.
                                                                (line 6)
* delete-duplicates:                     remove-duplicates; delete-duplicates.
                                                                (line 6)
* delete-file:                           delete-file.           (line 6)
* delete-if:                             remove; remove-if; remove-if-not; delete; delete-if; delete-if-not.
                                                                (line 6)
* delete-if-not:                         remove; remove-if; remove-if-not; delete; delete-if; delete-if-not.
                                                                (line 6)
* delete-package:                        delete-package.        (line 6)
* denominator:                           numerator; denominator.
                                                                (line 6)
* deposit-field:                         deposit-field.         (line 6)
* describe:                              describe.              (line 6)
* describe-object:                       describe-object.       (line 6)
* destructuring-bind:                    destructuring-bind.    (line 6)
* digit-char:                            digit-char.            (line 6)
* digit-char-p:                          digit-char-p.          (line 6)
* directory:                             directory.             (line 6)
* directory-namestring:                  namestring; file-namestring; directory-namestring; host-namestring; eno+.
                                                                (line 6)
* disassemble:                           disassemble.           (line 6)
* division-by-zero:                      division-by-zero.      (line 6)
* do:                                    do; do*.               (line 6)
* do*:                                   do; do*.               (line 6)
* do-all-symbols:                        do-symbols; do-external-symbols; do-all-symbols.
                                                                (line 6)
* do-external-symbols:                   do-symbols; do-external-symbols; do-all-symbols.
                                                                (line 6)
* do-symbols:                            do-symbols; do-external-symbols; do-all-symbols.
                                                                (line 6)
* documentation:                         documentation; setf documentation.
                                                                (line 6)
* dolist:                                dolist.                (line 6)
* dotimes:                               dotimes.               (line 6)
* double-float:                          short-float; single-float; double-float; long-float.
                                                                (line 6)
* double-float-epsilon:                  short-float-epsilon; short-float-negative-epsilon; single-float-epsilon+.
                                                                (line 6)
* double-float-negative-epsilon:         short-float-epsilon; short-float-negative-epsilon; single-float-epsilon+.
                                                                (line 6)
* dpb:                                   dpb.                   (line 6)
* dribble:                               dribble.               (line 6)
* dynamic-extent:                        dynamic-extent.        (line 6)
* ecase:                                 case; ccase; ecase.    (line 6)
* echo-stream:                           echo-stream.           (line 6)
* echo-stream-input-stream:              echo-stream-input-stream; echo-stream-output-stream.
                                                                (line 6)
* echo-stream-output-stream:             echo-stream-input-stream; echo-stream-output-stream.
                                                                (line 6)
* ed:                                    ed.                    (line 6)
* eighth:                                first; second; third; fourth; fifth; sixth; seventh; eighth; ninth; ten+.
                                                                (line 6)
* elt:                                   elt.                   (line 6)
* encode-universal-time:                 encode-universal-time. (line 6)
* end-of-file:                           end-of-file.           (line 6)
* endp:                                  endp.                  (line 6)
* enough-namestring:                     namestring; file-namestring; directory-namestring; host-namestring; eno+.
                                                                (line 6)
* ensure-directories-exist:              ensure-directories-exist.
                                                                (line 6)
* ensure-generic-function:               ensure-generic-function.
                                                                (line 6)
* eq:                                    eq.                    (line 6)
* eql <1>:                               eql (Function).        (line 6)
* eql:                                   eql (Type Specifier).  (line 6)
* equal:                                 equal.                 (line 6)
* equalp:                                equalp.                (line 6)
* error <1>:                             error (Function).      (line 6)
* error:                                 error (Condition Type).
                                                                (line 6)
* etypecase:                             typecase; ctypecase; etypecase.
                                                                (line 6)
* eval:                                  eval.                  (line 6)
* eval-when:                             eval-when.             (line 6)
* evenp:                                 evenp; oddp.           (line 6)
* every:                                 every; some; notevery; notany.
                                                                (line 6)
* exp:                                   exp; expt.             (line 6)
* export:                                export.                (line 6)
* expt:                                  exp; expt.             (line 6)
* extended-char:                         extended-char.         (line 6)
* fboundp:                               fboundp.               (line 6)
* fceiling:                              floor; ffloor; ceiling; fceiling; truncate; ftruncate; round; fround.
                                                                (line 6)
* fdefinition:                           fdefinition.           (line 6)
* ffloor:                                floor; ffloor; ceiling; fceiling; truncate; ftruncate; round; fround.
                                                                (line 6)
* fifth:                                 first; second; third; fourth; fifth; sixth; seventh; eighth; ninth; ten+.
                                                                (line 6)
* file-author:                           file-author.           (line 6)
* file-error:                            file-error.            (line 6)
* file-error-pathname:                   file-error-pathname.   (line 6)
* file-length:                           file-length.           (line 6)
* file-namestring:                       namestring; file-namestring; directory-namestring; host-namestring; eno+.
                                                                (line 6)
* file-position:                         file-position.         (line 6)
* file-stream:                           file-stream.           (line 6)
* file-string-length:                    file-string-length.    (line 6)
* file-write-date:                       file-write-date.       (line 6)
* fill:                                  fill.                  (line 6)
* fill-pointer:                          fill-pointer.          (line 6)
* find:                                  find; find-if; find-if-not.
                                                                (line 6)
* find-all-symbols:                      find-all-symbols.      (line 6)
* find-class:                            find-class.            (line 6)
* find-if:                               find; find-if; find-if-not.
                                                                (line 6)
* find-if-not:                           find; find-if; find-if-not.
                                                                (line 6)
* find-method:                           find-method.           (line 6)
* find-package:                          find-package.          (line 6)
* find-restart:                          find-restart.          (line 6)
* find-symbol:                           find-symbol.           (line 6)
* finish-output:                         finish-output; force-output; clear-output.
                                                                (line 6)
* first:                                 first; second; third; fourth; fifth; sixth; seventh; eighth; ninth; ten+.
                                                                (line 6)
* fixnum:                                fixnum.                (line 6)
* flet:                                  flet; labels; macrolet.
                                                                (line 6)
* float <1>:                             float (Function).      (line 6)
* float:                                 float (System Class).  (line 6)
* float-digits:                          decode-float; scale-float; float-radix; float-sign; float-digits; float+.
                                                                (line 6)
* float-precision:                       decode-float; scale-float; float-radix; float-sign; float-digits; float+.
                                                                (line 6)
* float-radix:                           decode-float; scale-float; float-radix; float-sign; float-digits; float+.
                                                                (line 6)
* float-sign:                            decode-float; scale-float; float-radix; float-sign; float-digits; float+.
                                                                (line 6)
* floating-point-inexact:                floating-point-inexact.
                                                                (line 6)
* floating-point-invalid-operation:      floating-point-invalid-operation.
                                                                (line 6)
* floating-point-overflow:               floating-point-overflow.
                                                                (line 6)
* floating-point-underflow:              floating-point-underflow.
                                                                (line 6)
* floatp:                                floatp.                (line 6)
* floor:                                 floor; ffloor; ceiling; fceiling; truncate; ftruncate; round; fround.
                                                                (line 6)
* fmakunbound:                           fmakunbound.           (line 6)
* force-output:                          finish-output; force-output; clear-output.
                                                                (line 6)
* format:                                format.                (line 6)
* formatter:                             formatter.             (line 6)
* fourth:                                first; second; third; fourth; fifth; sixth; seventh; eighth; ninth; ten+.
                                                                (line 6)
* fresh-line:                            terpri; fresh-line.    (line 6)
* fround:                                floor; ffloor; ceiling; fceiling; truncate; ftruncate; round; fround.
                                                                (line 6)
* ftruncate:                             floor; ffloor; ceiling; fceiling; truncate; ftruncate; round; fround.
                                                                (line 6)
* ftype:                                 ftype.                 (line 6)
* funcall:                               funcall.               (line 6)
* function <1>:                          function (Special Operator).
                                                                (line 6)
* function:                              function (System Class).
                                                                (line 6)
* function-keywords:                     function-keywords.     (line 6)
* function-lambda-expression:            function-lambda-expression.
                                                                (line 6)
* functionp:                             functionp.             (line 6)
* gcd:                                   gcd.                   (line 6)
* generic-function:                      generic-function.      (line 6)
* gensym:                                gensym.                (line 6)
* gentemp:                               gentemp.               (line 6)
* get:                                   get.                   (line 6)
* get-decoded-time:                      get-universal-time; get-decoded-time.
                                                                (line 6)
* get-dispatch-macro-character:          set-dispatch-macro-character; get-dispatch-macro-character.
                                                                (line 6)
* get-internal-real-time:                get-internal-real-time.
                                                                (line 6)
* get-internal-run-time:                 get-internal-run-time. (line 6)
* get-macro-character:                   set-macro-character; get-macro-character.
                                                                (line 6)
* get-output-stream-string:              get-output-stream-string.
                                                                (line 6)
* get-properties:                        get-properties.        (line 6)
* get-setf-expansion:                    get-setf-expansion.    (line 6)
* get-universal-time:                    get-universal-time; get-decoded-time.
                                                                (line 6)
* getf:                                  getf.                  (line 6)
* gethash:                               gethash.               (line 6)
* go:                                    go.                    (line 6)
* graphic-char-p:                        graphic-char-p.        (line 6)
* handler-bind:                          handler-bind.          (line 6)
* handler-case:                          handler-case.          (line 6)
* hash-table:                            hash-table.            (line 6)
* hash-table-count:                      hash-table-count.      (line 6)
* hash-table-p:                          hash-table-p.          (line 6)
* hash-table-rehash-size:                hash-table-rehash-size.
                                                                (line 6)
* hash-table-rehash-threshold:           hash-table-rehash-threshold.
                                                                (line 6)
* hash-table-size:                       hash-table-size.       (line 6)
* hash-table-test:                       hash-table-test.       (line 6)
* host-namestring:                       namestring; file-namestring; directory-namestring; host-namestring; eno+.
                                                                (line 6)
* identity:                              identity.              (line 6)
* if:                                    if.                    (line 6)
* ignorable:                             ignore; ignorable.     (line 6)
* ignore:                                ignore; ignorable.     (line 6)
* ignore-errors:                         ignore-errors.         (line 6)
* imagpart:                              realpart; imagpart.    (line 6)
* import:                                import.                (line 6)
* in-package:                            in-package.            (line 6)
* incf:                                  incf; decf.            (line 6)
* initialize-instance:                   initialize-instance (Standard Generic Function).
                                                                (line 6)
* inline:                                inline; notinline.     (line 6)
* input-stream-p:                        input-stream-p; output-stream-p.
                                                                (line 6)
* inspect:                               inspect.               (line 6)
* integer:                               integer.               (line 6)
* integer-decode-float:                  decode-float; scale-float; float-radix; float-sign; float-digits; float+.
                                                                (line 6)
* integer-length:                        integer-length.        (line 6)
* integerp:                              integerp.              (line 6)
* interactive-stream-p:                  interactive-stream-p.  (line 6)
* intern:                                intern.                (line 6)
* internal-time-units-per-second:        internal-time-units-per-second.
                                                                (line 6)
* intersection:                          intersection; nintersection.
                                                                (line 6)
* invalid-method-error:                  invalid-method-error.  (line 6)
* invoke-debugger:                       invoke-debugger.       (line 6)
* invoke-restart:                        invoke-restart.        (line 6)
* invoke-restart-interactively:          invoke-restart-interactively.
                                                                (line 6)
* isqrt:                                 sqrt; isqrt.           (line 6)
* keyword:                               keyword.               (line 6)
* keywordp:                              keywordp.              (line 6)
* labels:                                flet; labels; macrolet.
                                                                (line 6)
* lambda <1>:                            lambda (Macro).        (line 6)
* lambda:                                lambda (Symbol).       (line 6)
* lambda-list-keywords:                  lambda-list-keywords.  (line 6)
* lambda-parameters-limit:               lambda-parameters-limit.
                                                                (line 6)
* last:                                  last.                  (line 6)
* lcm:                                   lcm.                   (line 6)
* ldb:                                   ldb.                   (line 6)
* ldb-test:                              ldb-test.              (line 6)
* ldiff:                                 ldiff; tailp.          (line 6)
* least-negative-double-float:           most-positive-short-float; least-positive-short-float; least-positive-n+.
                                                                (line 6)
* least-negative-long-float:             most-positive-short-float; least-positive-short-float; least-positive-n+.
                                                                (line 6)
* least-negative-normalized-double-float: most-positive-short-float; least-positive-short-float; least-positive-n+.
                                                                (line 6)
* least-negative-normalized-long-float:  most-positive-short-float; least-positive-short-float; least-positive-n+.
                                                                (line 6)
* least-negative-normalized-short-float: most-positive-short-float; least-positive-short-float; least-positive-n+.
                                                                (line 6)
* least-negative-normalized-single-float: most-positive-short-float; least-positive-short-float; least-positive-n+.
                                                                (line 6)
* least-negative-short-float:            most-positive-short-float; least-positive-short-float; least-positive-n+.
                                                                (line 6)
* least-negative-single-float:           most-positive-short-float; least-positive-short-float; least-positive-n+.
                                                                (line 6)
* least-positive-double-float:           most-positive-short-float; least-positive-short-float; least-positive-n+.
                                                                (line 6)
* least-positive-long-float:             most-positive-short-float; least-positive-short-float; least-positive-n+.
                                                                (line 6)
* least-positive-normalized-double-float: most-positive-short-float; least-positive-short-float; least-positive-n+.
                                                                (line 6)
* least-positive-normalized-long-float:  most-positive-short-float; least-positive-short-float; least-positive-n+.
                                                                (line 6)
* least-positive-normalized-short-float: most-positive-short-float; least-positive-short-float; least-positive-n+.
                                                                (line 6)
* least-positive-normalized-single-float: most-positive-short-float; least-positive-short-float; least-positive-n+.
                                                                (line 6)
* least-positive-short-float:            most-positive-short-float; least-positive-short-float; least-positive-n+.
                                                                (line 6)
* least-positive-single-float:           most-positive-short-float; least-positive-short-float; least-positive-n+.
                                                                (line 6)
* length:                                length.                (line 6)
* let:                                   let; let*.             (line 6)
* let*:                                  let; let*.             (line 6)
* lisp-implementation-type:              lisp-implementation-type; lisp-implementation-version.
                                                                (line 6)
* lisp-implementation-version:           lisp-implementation-type; lisp-implementation-version.
                                                                (line 6)
* list <1>:                              list; list*.           (line 6)
* list:                                  list (System Class).   (line 6)
* list*:                                 list; list*.           (line 6)
* list-all-packages:                     list-all-packages.     (line 6)
* list-length:                           list-length.           (line 6)
* listen:                                listen.                (line 6)
* listp:                                 listp.                 (line 6)
* load:                                  load.                  (line 6)
* load-logical-pathname-translations:    load-logical-pathname-translations.
                                                                (line 6)
* load-time-value:                       load-time-value.       (line 6)
* locally:                               locally.               (line 6)
* log:                                   log.                   (line 6)
* logand:                                logand; logandc1; logandc2; logeqv; logior; lognand; lognor; lognot; lo+.
                                                                (line 6)
* logandc1:                              logand; logandc1; logandc2; logeqv; logior; lognand; lognor; lognot; lo+.
                                                                (line 6)
* logandc2:                              logand; logandc1; logandc2; logeqv; logior; lognand; lognor; lognot; lo+.
                                                                (line 6)
* logbitp:                               logbitp.               (line 6)
* logcount:                              logcount.              (line 6)
* logeqv:                                logand; logandc1; logandc2; logeqv; logior; lognand; lognor; lognot; lo+.
                                                                (line 6)
* logical-pathname <1>:                  logical-pathname (Function).
                                                                (line 6)
* logical-pathname:                      logical-pathname (System Class).
                                                                (line 6)
* logical-pathname-translations:         logical-pathname-translations.
                                                                (line 6)
* logior:                                logand; logandc1; logandc2; logeqv; logior; lognand; lognor; lognot; lo+.
                                                                (line 6)
* lognand:                               logand; logandc1; logandc2; logeqv; logior; lognand; lognor; lognot; lo+.
                                                                (line 6)
* lognor:                                logand; logandc1; logandc2; logeqv; logior; lognand; lognor; lognot; lo+.
                                                                (line 6)
* lognot:                                logand; logandc1; logandc2; logeqv; logior; lognand; lognor; lognot; lo+.
                                                                (line 6)
* logorc1:                               logand; logandc1; logandc2; logeqv; logior; lognand; lognor; lognot; lo+.
                                                                (line 6)
* logorc2:                               logand; logandc1; logandc2; logeqv; logior; lognand; lognor; lognot; lo+.
                                                                (line 6)
* logtest:                               logtest.               (line 6)
* logxor:                                logand; logandc1; logandc2; logeqv; logior; lognand; lognor; lognot; lo+.
                                                                (line 6)
* long-float:                            short-float; single-float; double-float; long-float.
                                                                (line 6)
* long-float-epsilon:                    short-float-epsilon; short-float-negative-epsilon; single-float-epsilon+.
                                                                (line 6)
* long-float-negative-epsilon:           short-float-epsilon; short-float-negative-epsilon; single-float-epsilon+.
                                                                (line 6)
* long-site-name:                        short-site-name; long-site-name.
                                                                (line 6)
* loop:                                  loop.                  (line 6)
* loop-finish:                           loop-finish.           (line 6)
* lower-case-p:                          upper-case-p; lower-case-p; both-case-p.
                                                                (line 6)
* machine-instance:                      machine-instance.      (line 6)
* machine-type:                          machine-type.          (line 6)
* machine-version:                       machine-version.       (line 6)
* macro-function:                        macro-function.        (line 6)
* macroexpand:                           macroexpand; macroexpand-1.
                                                                (line 6)
* macroexpand-1:                         macroexpand; macroexpand-1.
                                                                (line 6)
* macrolet:                              flet; labels; macrolet.
                                                                (line 6)
* make-array:                            make-array.            (line 6)
* make-broadcast-stream:                 make-broadcast-stream. (line 6)
* make-concatenated-stream:              make-concatenated-stream.
                                                                (line 6)
* make-condition:                        make-condition.        (line 6)
* make-dispatch-macro-character:         make-dispatch-macro-character.
                                                                (line 6)
* make-echo-stream:                      make-echo-stream.      (line 6)
* make-hash-table:                       make-hash-table.       (line 6)
* make-instance:                         make-instance.         (line 6)
* make-instances-obsolete:               make-instances-obsolete.
                                                                (line 6)
* make-list:                             make-list.             (line 6)
* make-load-form:                        make-load-form.        (line 6)
* make-load-form-saving-slots:           make-load-form-saving-slots.
                                                                (line 6)
* make-method:                           call-method; make-method.
                                                                (line 6)
* make-package:                          make-package.          (line 6)
* make-pathname:                         make-pathname.         (line 6)
* make-random-state:                     make-random-state.     (line 6)
* make-sequence:                         make-sequence.         (line 6)
* make-string:                           make-string.           (line 6)
* make-string-input-stream:              make-string-input-stream.
                                                                (line 6)
* make-string-output-stream:             make-string-output-stream.
                                                                (line 6)
* make-symbol:                           make-symbol.           (line 6)
* make-synonym-stream:                   make-synonym-stream.   (line 6)
* make-two-way-stream:                   make-two-way-stream.   (line 6)
* makunbound:                            makunbound.            (line 6)
* map:                                   map.                   (line 6)
* map-into:                              map-into.              (line 6)
* mapc:                                  mapc; mapcar; mapcan; mapl; maplist; mapcon.
                                                                (line 6)
* mapcan:                                mapc; mapcar; mapcan; mapl; maplist; mapcon.
                                                                (line 6)
* mapcar:                                mapc; mapcar; mapcan; mapl; maplist; mapcon.
                                                                (line 6)
* mapcon:                                mapc; mapcar; mapcan; mapl; maplist; mapcon.
                                                                (line 6)
* maphash:                               maphash.               (line 6)
* mapl:                                  mapc; mapcar; mapcan; mapl; maplist; mapcon.
                                                                (line 6)
* maplist:                               mapc; mapcar; mapcan; mapl; maplist; mapcon.
                                                                (line 6)
* mask-field:                            mask-field.            (line 6)
* max:                                   max; min.              (line 6)
* member <1>:                            member; member-if; member-if-not.
                                                                (line 6)
* member:                                member (Type Specifier).
                                                                (line 6)
* member-if:                             member; member-if; member-if-not.
                                                                (line 6)
* member-if-not:                         member; member-if; member-if-not.
                                                                (line 6)
* merge:                                 merge.                 (line 6)
* merge-pathnames:                       merge-pathnames.       (line 6)
* method:                                method.                (line 6)
* method-combination:                    method-combination.    (line 6)
* method-combination-error:              method-combination-error.
                                                                (line 6)
* method-qualifiers:                     method-qualifiers.     (line 6)
* min:                                   max; min.              (line 6)
* minusp:                                minusp; plusp.         (line 6)
* mismatch:                              mismatch.              (line 6)
* mod <1>:                               mod; rem.              (line 6)
* mod:                                   mod (Type Specifier).  (line 6)
* most-negative-double-float:            most-positive-short-float; least-positive-short-float; least-positive-n+.
                                                                (line 6)
* most-negative-fixnum:                  most-positive-fixnum; most-negative-fixnum.
                                                                (line 6)
* most-negative-long-float:              most-positive-short-float; least-positive-short-float; least-positive-n+.
                                                                (line 6)
* most-negative-short-float:             most-positive-short-float; least-positive-short-float; least-positive-n+.
                                                                (line 6)
* most-negative-single-float:            most-positive-short-float; least-positive-short-float; least-positive-n+.
                                                                (line 6)
* most-positive-double-float:            most-positive-short-float; least-positive-short-float; least-positive-n+.
                                                                (line 6)
* most-positive-fixnum:                  most-positive-fixnum; most-negative-fixnum.
                                                                (line 6)
* most-positive-long-float:              most-positive-short-float; least-positive-short-float; least-positive-n+.
                                                                (line 6)
* most-positive-short-float:             most-positive-short-float; least-positive-short-float; least-positive-n+.
                                                                (line 6)
* most-positive-single-float:            most-positive-short-float; least-positive-short-float; least-positive-n+.
                                                                (line 6)
* muffle-warning <1>:                    abort; continue; muffle-warning; store-value; use-value.
                                                                (line 6)
* muffle-warning:                        muffle-warning (Restart).
                                                                (line 6)
* multiple-value-bind:                   multiple-value-bind.   (line 6)
* multiple-value-call:                   multiple-value-call.   (line 6)
* multiple-value-list:                   multiple-value-list.   (line 6)
* multiple-value-prog1:                  multiple-value-prog1.  (line 6)
* multiple-value-setq:                   multiple-value-setq.   (line 6)
* multiple-values-limit:                 multiple-values-limit. (line 6)
* name-char:                             name-char.             (line 6)
* namestring:                            namestring; file-namestring; directory-namestring; host-namestring; eno+.
                                                                (line 6)
* nbutlast:                              butlast; nbutlast.     (line 6)
* nconc:                                 nconc.                 (line 6)
* next-method-p:                         next-method-p.         (line 6)
* nil <1>:                               nil (Constant Variable).
                                                                (line 6)
* nil:                                   nil (Type).            (line 6)
* nintersection:                         intersection; nintersection.
                                                                (line 6)
* ninth:                                 first; second; third; fourth; fifth; sixth; seventh; eighth; ninth; ten+.
                                                                (line 6)
* no-applicable-method:                  no-applicable-method.  (line 6)
* no-next-method:                        no-next-method.        (line 6)
* not <1>:                               not (Function).        (line 6)
* not:                                   not (Type Specifier).  (line 6)
* notany:                                every; some; notevery; notany.
                                                                (line 6)
* notevery:                              every; some; notevery; notany.
                                                                (line 6)
* notinline:                             inline; notinline.     (line 6)
* nreconc:                               revappend; nreconc.    (line 6)
* nreverse:                              reverse; nreverse.     (line 6)
* nset-difference:                       set-difference; nset-difference.
                                                                (line 6)
* nset-exclusive-or:                     set-exclusive-or; nset-exclusive-or.
                                                                (line 6)
* nstring-capitalize:                    string-upcase; string-downcase; string-capitalize; nstring-upcase; nstr+.
                                                                (line 6)
* nstring-downcase:                      string-upcase; string-downcase; string-capitalize; nstring-upcase; nstr+.
                                                                (line 6)
* nstring-upcase:                        string-upcase; string-downcase; string-capitalize; nstring-upcase; nstr+.
                                                                (line 6)
* nsublis:                               sublis; nsublis.       (line 6)
* nsubst:                                subst; subst-if; subst-if-not; nsubst; nsubst-if; nsubst-if-not.
                                                                (line 6)
* nsubst-if:                             subst; subst-if; subst-if-not; nsubst; nsubst-if; nsubst-if-not.
                                                                (line 6)
* nsubst-if-not:                         subst; subst-if; subst-if-not; nsubst; nsubst-if; nsubst-if-not.
                                                                (line 6)
* nsubstitute:                           substitute; substitute-if; substitute-if-not; nsubstitute; nsubstitute-+.
                                                                (line 6)
* nsubstitute-if:                        substitute; substitute-if; substitute-if-not; nsubstitute; nsubstitute-+.
                                                                (line 6)
* nsubstitute-if-not:                    substitute; substitute-if; substitute-if-not; nsubstitute; nsubstitute-+.
                                                                (line 6)
* nth:                                   nth.                   (line 6)
* nth-value:                             nth-value.             (line 6)
* nthcdr:                                nthcdr.                (line 6)
* null <1>:                              null (Function).       (line 6)
* null:                                  null (System Class).   (line 6)
* number:                                number.                (line 6)
* numberp:                               numberp.               (line 6)
* numerator:                             numerator; denominator.
                                                                (line 6)
* nunion:                                union; nunion.         (line 6)
* oddp:                                  evenp; oddp.           (line 6)
* open:                                  open.                  (line 6)
* open-stream-p:                         open-stream-p.         (line 6)
* optimize:                              optimize.              (line 6)
* or <1>:                                or (Macro).            (line 6)
* or:                                    or (Type Specifier).   (line 6)
* output-stream-p:                       input-stream-p; output-stream-p.
                                                                (line 6)
* package:                               package.               (line 6)
* package-error:                         package-error.         (line 6)
* package-error-package:                 package-error-package. (line 6)
* package-name:                          package-name.          (line 6)
* package-nicknames:                     package-nicknames.     (line 6)
* package-shadowing-symbols:             package-shadowing-symbols.
                                                                (line 6)
* package-use-list:                      package-use-list.      (line 6)
* package-used-by-list:                  package-used-by-list.  (line 6)
* packagep:                              packagep.              (line 6)
* pairlis:                               pairlis.               (line 6)
* parse-error:                           parse-error.           (line 6)
* parse-integer:                         parse-integer.         (line 6)
* parse-namestring:                      parse-namestring.      (line 6)
* pathname <1>:                          pathname (Function).   (line 6)
* pathname:                              pathname (System Class).
                                                                (line 6)
* pathname-device:                       pathname-host; pathname-device; pathname-directory; pathname-name; path+.
                                                                (line 6)
* pathname-directory:                    pathname-host; pathname-device; pathname-directory; pathname-name; path+.
                                                                (line 6)
* pathname-host:                         pathname-host; pathname-device; pathname-directory; pathname-name; path+.
                                                                (line 6)
* pathname-match-p:                      pathname-match-p.      (line 6)
* pathname-name:                         pathname-host; pathname-device; pathname-directory; pathname-name; path+.
                                                                (line 6)
* pathname-type:                         pathname-host; pathname-device; pathname-directory; pathname-name; path+.
                                                                (line 6)
* pathname-version:                      pathname-host; pathname-device; pathname-directory; pathname-name; path+.
                                                                (line 6)
* pathnamep:                             pathnamep.             (line 6)
* peek-char:                             peek-char.             (line 6)
* phase:                                 phase.                 (line 6)
* pi:                                    pi.                    (line 6)
* plusp:                                 minusp; plusp.         (line 6)
* pop:                                   pop.                   (line 6)
* position:                              position; position-if; position-if-not.
                                                                (line 6)
* position-if:                           position; position-if; position-if-not.
                                                                (line 6)
* position-if-not:                       position; position-if; position-if-not.
                                                                (line 6)
* pprint:                                write; prin1; print; pprint; princ.
                                                                (line 6)
* pprint-dispatch:                       pprint-dispatch.       (line 6)
* pprint-exit-if-list-exhausted:         pprint-exit-if-list-exhausted.
                                                                (line 6)
* pprint-fill:                           pprint-fill; pprint-linear; pprint-tabular.
                                                                (line 6)
* pprint-indent:                         pprint-indent.         (line 6)
* pprint-linear:                         pprint-fill; pprint-linear; pprint-tabular.
                                                                (line 6)
* pprint-logical-block:                  pprint-logical-block.  (line 6)
* pprint-newline:                        pprint-newline.        (line 6)
* pprint-pop:                            pprint-pop.            (line 6)
* pprint-tab:                            pprint-tab.            (line 6)
* pprint-tabular:                        pprint-fill; pprint-linear; pprint-tabular.
                                                                (line 6)
* prin1:                                 write; prin1; print; pprint; princ.
                                                                (line 6)
* prin1-to-string:                       write-to-string; prin1-to-string; princ-to-string.
                                                                (line 6)
* princ:                                 write; prin1; print; pprint; princ.
                                                                (line 6)
* princ-to-string:                       write-to-string; prin1-to-string; princ-to-string.
                                                                (line 6)
* print:                                 write; prin1; print; pprint; princ.
                                                                (line 6)
* print-not-readable:                    print-not-readable.    (line 6)
* print-not-readable-object:             print-not-readable-object.
                                                                (line 6)
* print-object:                          print-object.          (line 6)
* print-unreadable-object:               print-unreadable-object.
                                                                (line 6)
* probe-file:                            probe-file.            (line 6)
* proclaim:                              proclaim.              (line 6)
* prog:                                  prog; prog*.           (line 6)
* prog*:                                 prog; prog*.           (line 6)
* prog1:                                 prog1; prog2.          (line 6)
* prog2:                                 prog1; prog2.          (line 6)
* progn:                                 progn.                 (line 6)
* program-error:                         program-error.         (line 6)
* progv:                                 progv.                 (line 6)
* provide:                               provide; require.      (line 6)
* psetf:                                 setf; psetf.           (line 6)
* psetq:                                 psetq.                 (line 6)
* push:                                  push.                  (line 6)
* pushnew:                               pushnew.               (line 6)
* quote:                                 quote.                 (line 6)
* random:                                random.                (line 6)
* random-state:                          random-state.          (line 6)
* random-state-p:                        random-state-p.        (line 6)
* rassoc:                                rassoc; rassoc-if; rassoc-if-not.
                                                                (line 6)
* rassoc-if:                             rassoc; rassoc-if; rassoc-if-not.
                                                                (line 6)
* rassoc-if-not:                         rassoc; rassoc-if; rassoc-if-not.
                                                                (line 6)
* ratio:                                 ratio.                 (line 6)
* rational <1>:                          rational; rationalize. (line 6)
* rational:                              rational (System Class).
                                                                (line 6)
* rationalize:                           rational; rationalize. (line 6)
* rationalp:                             rationalp.             (line 6)
* read:                                  read; read-preserving-whitespace.
                                                                (line 6)
* read-byte:                             read-byte.             (line 6)
* read-char:                             read-char.             (line 6)
* read-char-no-hang:                     read-char-no-hang.     (line 6)
* read-delimited-list:                   read-delimited-list.   (line 6)
* read-from-string:                      read-from-string.      (line 6)
* read-line:                             read-line.             (line 6)
* read-preserving-whitespace:            read; read-preserving-whitespace.
                                                                (line 6)
* read-sequence:                         read-sequence.         (line 6)
* reader-error:                          reader-error.          (line 6)
* readtable:                             readtable.             (line 6)
* readtable-case:                        readtable-case.        (line 6)
* readtablep:                            readtablep.            (line 6)
* real:                                  real.                  (line 6)
* realp:                                 realp.                 (line 6)
* realpart:                              realpart; imagpart.    (line 6)
* reduce:                                reduce.                (line 6)
* reinitialize-instance:                 reinitialize-instance. (line 6)
* rem:                                   mod; rem.              (line 6)
* remf:                                  remf.                  (line 6)
* remhash:                               remhash.               (line 6)
* remove:                                remove; remove-if; remove-if-not; delete; delete-if; delete-if-not.
                                                                (line 6)
* remove-duplicates:                     remove-duplicates; delete-duplicates.
                                                                (line 6)
* remove-if:                             remove; remove-if; remove-if-not; delete; delete-if; delete-if-not.
                                                                (line 6)
* remove-if-not:                         remove; remove-if; remove-if-not; delete; delete-if; delete-if-not.
                                                                (line 6)
* remove-method:                         remove-method.         (line 6)
* remprop:                               remprop.               (line 6)
* rename-file:                           rename-file.           (line 6)
* rename-package:                        rename-package.        (line 6)
* replace:                               replace.               (line 6)
* require:                               provide; require.      (line 6)
* rest:                                  rest.                  (line 6)
* restart:                               restart.               (line 6)
* restart-bind:                          restart-bind.          (line 6)
* restart-case:                          restart-case.          (line 6)
* restart-name:                          restart-name.          (line 6)
* return:                                return.                (line 6)
* return-from:                           return-from.           (line 6)
* revappend:                             revappend; nreconc.    (line 6)
* reverse:                               reverse; nreverse.     (line 6)
* room:                                  room.                  (line 6)
* rotatef:                               rotatef.               (line 6)
* round:                                 floor; ffloor; ceiling; fceiling; truncate; ftruncate; round; fround.
                                                                (line 6)
* row-major-aref:                        row-major-aref.        (line 6)
* rplaca:                                rplaca; rplacd.        (line 6)
* rplacd:                                rplaca; rplacd.        (line 6)
* satisfies:                             satisfies.             (line 6)
* sbit:                                  bit; sbit.             (line 6)
* scale-float:                           decode-float; scale-float; float-radix; float-sign; float-digits; float+.
                                                                (line 6)
* schar:                                 char; schar.           (line 6)
* search:                                search.                (line 6)
* second:                                first; second; third; fourth; fifth; sixth; seventh; eighth; ninth; ten+.
                                                                (line 6)
* sequence:                              sequence.              (line 6)
* serious-condition:                     serious-condition.     (line 6)
* set:                                   set.                   (line 6)
* set-difference:                        set-difference; nset-difference.
                                                                (line 6)
* set-dispatch-macro-character:          set-dispatch-macro-character; get-dispatch-macro-character.
                                                                (line 6)
* set-exclusive-or:                      set-exclusive-or; nset-exclusive-or.
                                                                (line 6)
* set-macro-character:                   set-macro-character; get-macro-character.
                                                                (line 6)
* set-pprint-dispatch:                   set-pprint-dispatch.   (line 6)
* set-syntax-from-char:                  set-syntax-from-char.  (line 6)
* setf:                                  setf; psetf.           (line 6)
* setq:                                  setq.                  (line 6)
* seventh:                               first; second; third; fourth; fifth; sixth; seventh; eighth; ninth; ten+.
                                                                (line 6)
* shadow:                                shadow.                (line 6)
* shadowing-import:                      shadowing-import.      (line 6)
* shared-initialize:                     shared-initialize (Standard Generic Function).
                                                                (line 6)
* shiftf:                                shiftf.                (line 6)
* short-float:                           short-float; single-float; double-float; long-float.
                                                                (line 6)
* short-float-epsilon:                   short-float-epsilon; short-float-negative-epsilon; single-float-epsilon+.
                                                                (line 6)
* short-float-negative-epsilon:          short-float-epsilon; short-float-negative-epsilon; single-float-epsilon+.
                                                                (line 6)
* short-site-name:                       short-site-name; long-site-name.
                                                                (line 6)
* signal:                                signal.                (line 6)
* signed-byte:                           signed-byte.           (line 6)
* signum:                                signum.                (line 6)
* simple-array:                          simple-array.          (line 6)
* simple-base-string:                    simple-base-string.    (line 6)
* simple-bit-vector:                     simple-bit-vector.     (line 6)
* simple-bit-vector-p:                   simple-bit-vector-p.   (line 6)
* simple-condition:                      simple-condition.      (line 6)
* simple-condition-format-arguments:     simple-condition-format-control; simple-condition-format-arguments.
                                                                (line 6)
* simple-condition-format-control:       simple-condition-format-control; simple-condition-format-arguments.
                                                                (line 6)
* simple-error:                          simple-error.          (line 6)
* simple-string:                         simple-string.         (line 6)
* simple-string-p:                       simple-string-p.       (line 6)
* simple-type-error:                     simple-type-error.     (line 6)
* simple-vector:                         simple-vector.         (line 6)
* simple-vector-p:                       simple-vector-p.       (line 6)
* simple-warning:                        simple-warning.        (line 6)
* sin:                                   sin; cos; tan.         (line 6)
* single-float:                          short-float; single-float; double-float; long-float.
                                                                (line 6)
* single-float-epsilon:                  short-float-epsilon; short-float-negative-epsilon; single-float-epsilon+.
                                                                (line 6)
* single-float-negative-epsilon:         short-float-epsilon; short-float-negative-epsilon; single-float-epsilon+.
                                                                (line 6)
* sinh:                                  sinh; cosh; tanh; asinh; acosh; atanh.
                                                                (line 6)
* sixth:                                 first; second; third; fourth; fifth; sixth; seventh; eighth; ninth; ten+.
                                                                (line 6)
* sleep:                                 sleep.                 (line 6)
* slot-boundp:                           slot-boundp.           (line 6)
* slot-exists-p:                         slot-exists-p.         (line 6)
* slot-makunbound:                       slot-makunbound.       (line 6)
* slot-missing:                          slot-missing.          (line 6)
* slot-unbound:                          slot-unbound.          (line 6)
* slot-value:                            slot-value.            (line 6)
* software-type:                         software-type; software-version.
                                                                (line 6)
* software-version:                      software-type; software-version.
                                                                (line 6)
* some:                                  every; some; notevery; notany.
                                                                (line 6)
* sort:                                  sort; stable-sort.     (line 6)
* special:                               special.               (line 6)
* special-operator-p:                    special-operator-p.    (line 6)
* sqrt:                                  sqrt; isqrt.           (line 6)
* stable-sort:                           sort; stable-sort.     (line 6)
* standard-char:                         standard-char.         (line 6)
* standard-char-p:                       standard-char-p.       (line 6)
* standard-class:                        standard-class.        (line 6)
* standard-generic-function:             standard-generic-function.
                                                                (line 6)
* standard-method:                       standard-method.       (line 6)
* standard-object:                       standard-object.       (line 6)
* step:                                  step.                  (line 6)
* storage-condition:                     storage-condition.     (line 6)
* store-value <1>:                       abort; continue; muffle-warning; store-value; use-value.
                                                                (line 6)
* store-value:                           store-value (Restart). (line 6)
* stream:                                stream.                (line 6)
* stream-element-type:                   stream-element-type.   (line 6)
* stream-error:                          stream-error.          (line 6)
* stream-error-stream:                   stream-error-stream.   (line 6)
* stream-external-format:                stream-external-format.
                                                                (line 6)
* streamp:                               streamp.               (line 6)
* string <1>:                            string (Function).     (line 6)
* string:                                string (System Class). (line 6)
* string-capitalize:                     string-upcase; string-downcase; string-capitalize; nstring-upcase; nstr+.
                                                                (line 6)
* string-downcase:                       string-upcase; string-downcase; string-capitalize; nstring-upcase; nstr+.
                                                                (line 6)
* string-equal:                          string=; string/=; string<; string>; string<=; string>=; string-equal; +.
                                                                (line 6)
* string-greaterp:                       string=; string/=; string<; string>; string<=; string>=; string-equal; +.
                                                                (line 6)
* string-left-trim:                      string-trim; string-left-trim; string-right-trim.
                                                                (line 6)
* string-lessp:                          string=; string/=; string<; string>; string<=; string>=; string-equal; +.
                                                                (line 6)
* string-not-equal:                      string=; string/=; string<; string>; string<=; string>=; string-equal; +.
                                                                (line 6)
* string-not-greaterp:                   string=; string/=; string<; string>; string<=; string>=; string-equal; +.
                                                                (line 6)
* string-not-lessp:                      string=; string/=; string<; string>; string<=; string>=; string-equal; +.
                                                                (line 6)
* string-right-trim:                     string-trim; string-left-trim; string-right-trim.
                                                                (line 6)
* string-stream:                         string-stream.         (line 6)
* string-trim:                           string-trim; string-left-trim; string-right-trim.
                                                                (line 6)
* string-upcase:                         string-upcase; string-downcase; string-capitalize; nstring-upcase; nstr+.
                                                                (line 6)
* string/=:                              string=; string/=; string<; string>; string<=; string>=; string-equal; +.
                                                                (line 6)
* string<:                               string=; string/=; string<; string>; string<=; string>=; string-equal; +.
                                                                (line 6)
* string<=:                              string=; string/=; string<; string>; string<=; string>=; string-equal; +.
                                                                (line 6)
* string=:                               string=; string/=; string<; string>; string<=; string>=; string-equal; +.
                                                                (line 6)
* string>:                               string=; string/=; string<; string>; string<=; string>=; string-equal; +.
                                                                (line 6)
* string>=:                              string=; string/=; string<; string>; string<=; string>=; string-equal; +.
                                                                (line 6)
* stringp:                               stringp.               (line 6)
* structure-class:                       structure-class.       (line 6)
* structure-object:                      structure-object.      (line 6)
* style-warning:                         style-warning.         (line 6)
* sublis:                                sublis; nsublis.       (line 6)
* subseq:                                subseq.                (line 6)
* subsetp:                               subsetp.               (line 6)
* subst:                                 subst; subst-if; subst-if-not; nsubst; nsubst-if; nsubst-if-not.
                                                                (line 6)
* subst-if:                              subst; subst-if; subst-if-not; nsubst; nsubst-if; nsubst-if-not.
                                                                (line 6)
* subst-if-not:                          subst; subst-if; subst-if-not; nsubst; nsubst-if; nsubst-if-not.
                                                                (line 6)
* substitute:                            substitute; substitute-if; substitute-if-not; nsubstitute; nsubstitute-+.
                                                                (line 6)
* substitute-if:                         substitute; substitute-if; substitute-if-not; nsubstitute; nsubstitute-+.
                                                                (line 6)
* substitute-if-not:                     substitute; substitute-if; substitute-if-not; nsubstitute; nsubstitute-+.
                                                                (line 6)
* subtypep:                              subtypep.              (line 6)
* svref:                                 svref.                 (line 6)
* sxhash:                                sxhash.                (line 6)
* symbol:                                symbol.                (line 6)
* symbol-function:                       symbol-function.       (line 6)
* symbol-macrolet:                       symbol-macrolet.       (line 6)
* symbol-name:                           symbol-name.           (line 6)
* symbol-package:                        symbol-package.        (line 6)
* symbol-plist:                          symbol-plist.          (line 6)
* symbol-value:                          symbol-value.          (line 6)
* symbolp:                               symbolp.               (line 6)
* synonym-stream:                        synonym-stream.        (line 6)
* synonym-stream-symbol:                 synonym-stream-symbol. (line 6)
* t <1>:                                 t (Constant Variable). (line 6)
* t:                                     t (System Class).      (line 6)
* tagbody:                               tagbody.               (line 6)
* tailp:                                 ldiff; tailp.          (line 6)
* tan:                                   sin; cos; tan.         (line 6)
* tanh:                                  sinh; cosh; tanh; asinh; acosh; atanh.
                                                                (line 6)
* tenth:                                 first; second; third; fourth; fifth; sixth; seventh; eighth; ninth; ten+.
                                                                (line 6)
* terpri:                                terpri; fresh-line.    (line 6)
* the:                                   the.                   (line 6)
* third:                                 first; second; third; fourth; fifth; sixth; seventh; eighth; ninth; ten+.
                                                                (line 6)
* throw:                                 throw.                 (line 6)
* time:                                  time (Macro).          (line 6)
* trace:                                 trace; untrace.        (line 6)
* translate-logical-pathname:            translate-logical-pathname.
                                                                (line 6)
* translate-pathname:                    translate-pathname.    (line 6)
* tree-equal:                            tree-equal.            (line 6)
* truename:                              truename.              (line 6)
* truncate:                              floor; ffloor; ceiling; fceiling; truncate; ftruncate; round; fround.
                                                                (line 6)
* two-way-stream:                        two-way-stream.        (line 6)
* two-way-stream-input-stream:           two-way-stream-input-stream; two-way-stream-output-stream.
                                                                (line 6)
* two-way-stream-output-stream:          two-way-stream-input-stream; two-way-stream-output-stream.
                                                                (line 6)
* type:                                  type.                  (line 6)
* type-error:                            type-error.            (line 6)
* type-error-datum:                      type-error-datum; type-error-expected-type.
                                                                (line 6)
* type-error-expected-type:              type-error-datum; type-error-expected-type.
                                                                (line 6)
* type-of:                               type-of.               (line 6)
* typecase:                              typecase; ctypecase; etypecase.
                                                                (line 6)
* typep:                                 typep.                 (line 6)
* unbound-slot:                          unbound-slot.          (line 6)
* unbound-slot-instance:                 unbound-slot-instance. (line 6)
* unbound-variable:                      unbound-variable.      (line 6)
* undefined-function:                    undefined-function.    (line 6)
* unexport:                              unexport.              (line 6)
* unintern:                              unintern.              (line 6)
* union:                                 union; nunion.         (line 6)
* unless:                                when; unless.          (line 6)
* unread-char:                           unread-char.           (line 6)
* unsigned-byte:                         unsigned-byte.         (line 6)
* untrace:                               trace; untrace.        (line 6)
* unuse-package:                         unuse-package.         (line 6)
* unwind-protect:                        unwind-protect.        (line 6)
* update-instance-for-different-class:   update-instance-for-different-class.
                                                                (line 6)
* update-instance-for-redefined-class:   update-instance-for-redefined-class.
                                                                (line 6)
* upgraded-array-element-type:           upgraded-array-element-type.
                                                                (line 6)
* upgraded-complex-part-type:            upgraded-complex-part-type.
                                                                (line 6)
* upper-case-p:                          upper-case-p; lower-case-p; both-case-p.
                                                                (line 6)
* use-package:                           use-package.           (line 6)
* use-value <1>:                         abort; continue; muffle-warning; store-value; use-value.
                                                                (line 6)
* use-value:                             use-value (Restart).   (line 6)
* user-homedir-pathname:                 user-homedir-pathname. (line 6)
* values <1>:                            values (Accessor).     (line 6)
* values:                                values (Type Specifier).
                                                                (line 6)
* values-list:                           values-list.           (line 6)
* vector <1>:                            vector (Function).     (line 6)
* vector:                                vector (System Class). (line 6)
* vector-pop:                            vector-pop.            (line 6)
* vector-push:                           vector-push; vector-push-extend.
                                                                (line 6)
* vector-push-extend:                    vector-push; vector-push-extend.
                                                                (line 6)
* vectorp:                               vectorp.               (line 6)
* warn:                                  warn.                  (line 6)
* warning:                               warning.               (line 6)
* when:                                  when; unless.          (line 6)
* wild-pathname-p:                       wild-pathname-p.       (line 6)
* with-accessors:                        with-accessors.        (line 6)
* with-compilation-unit:                 with-compilation-unit. (line 6)
* with-condition-restarts:               with-condition-restarts.
                                                                (line 6)
* with-hash-table-iterator:              with-hash-table-iterator.
                                                                (line 6)
* with-input-from-string:                with-input-from-string.
                                                                (line 6)
* with-open-file:                        with-open-file.        (line 6)
* with-open-stream:                      with-open-stream.      (line 6)
* with-output-to-string:                 with-output-to-string. (line 6)
* with-package-iterator:                 with-package-iterator. (line 6)
* with-simple-restart:                   with-simple-restart.   (line 6)
* with-slots:                            with-slots.            (line 6)
* with-standard-io-syntax:               with-standard-io-syntax.
                                                                (line 6)
* write:                                 write; prin1; print; pprint; princ.
                                                                (line 6)
* write-byte:                            write-byte.            (line 6)
* write-char:                            write-char.            (line 6)
* write-line:                            write-string; write-line.
                                                                (line 6)
* write-sequence:                        write-sequence.        (line 6)
* write-string:                          write-string; write-line.
                                                                (line 6)
* write-to-string:                       write-to-string; prin1-to-string; princ-to-string.
                                                                (line 6)
* y-or-n-p:                              y-or-n-p; yes-or-no-p. (line 6)
* yes-or-no-p:                           y-or-n-p; yes-or-no-p. (line 6)
* zerop:                                 zerop.                 (line 6)



Local Variables:
coding: utf-8
End:
